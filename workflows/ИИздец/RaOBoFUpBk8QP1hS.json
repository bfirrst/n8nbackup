{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "calcRange",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "calcRange": {
      "main": [
        [
          {
            "node": "GET today",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "groupByUser": {
      "main": [
        [
          {
            "node": "digestGPT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "digestGPT": {
      "main": [
        [
          {
            "node": "Escape",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET today": {
      "main": [
        [
          {
            "node": "groupByUser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SEND": {
      "main": [
        [
          {
            "node": "SAVE SUPA  digest",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Escape": {
      "main": [
        [
          {
            "node": "SEND",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-16T14:10:49.752Z",
  "id": "RaOBoFUpBk8QP1hS",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "NUT digest",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 21,
              "triggerAtMinute": null
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        60,
        100
      ],
      "id": "c78b4927-c31f-4cbf-98fb-c111bd4df426",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "jsCode": "// определяем начало и конец текущего дня (МСК)\nconst now = new Date(new Date().toLocaleString('en-US', { timeZone: 'Europe/Moscow' }));\nconst pad = n => String(n).padStart(2, '0');\nconst date = `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}`;\n\nreturn [{\n  json: {\n    date,                                   // '2025-05-16'\n    dayStart: `${date}T00:00:00`,\n    dayEnd:   `${date}T23:59:59`\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        100
      ],
      "id": "55c1b553-dc54-4e75-a218-a623ba2ba105",
      "name": "calcRange"
    },
    {
      "parameters": {
        "jsCode": "// items = массив строк из таблицы meals\nconst users = {};   // chat_id → агрегаты\n\nfor (const { json: r } of items) {\n  const id = r.chat_id;\n  const dt = new Date(r.eaten_at);\n\n  if (!users[id]) {\n    users[id] = {\n      chat_id: id,                        // ← для Telegram\n      gpt: {                              // ← для LLM\n        date: $items('calcRange')[0].json.date,\n        kcal: 0, prot: 0, fat: 0, carb: 0,\n        meals: []                         // строки «HH:MM — блюдо 200 г»\n      }\n    };\n  }\n\n  const u = users[id].gpt;\n\n  // суммарные КБЖУ\n  u.kcal += r.kcal;\n  u.prot += r.prot;\n  u.fat  += r.fat;\n  u.carb += r.carb;\n\n  // строка тайм-лайна\n  const hhmm = dt.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });\n  u.meals.push(`${hhmm} — ${r.dish} ${r.grams} г`);\n}\n\n// превращаем в массив items\nreturn Object.values(users).map(j => ({ json: j }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        100
      ],
      "id": "fccf7bbd-9784-4505-8597-de31a809bb95",
      "name": "groupByUser"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "messages": {
          "values": [
            {
              "content": "=Ты нутри-диетолог-бот. На вход приходит отчет о питании пользователя в JSON:\n{\n  \"date\": \"YYYY-MM-DD\",\n  \"kcal\": число | null,\n  \"prot\": число | null,\n  \"fat\" : число | null,\n  \"carb\": число | null,\n  \"meals\": [ \"08:00 — …\", … ]        // массив может быть пуст\n}\n\n✅  Если данные по КБЖУ есть - сделай отчёт:\n\n• Итог КБЖУ за день: kcal, Б, Ж, У  \n• Замечания: (кратко, только если есть замечания по рациону пользователя)  \n• Совет на завтра: (1 конкретная рекомендация по улучшению самочувствия или питания)\n\nВ конце: \"Если будут вопросы — пиши :)\"\n\n--------------------------------\nФормат:\n\n• Telegram-Markdown Legacy \n• Сделай текст визуально приятным, важное выдели\n• жирный — одна `*`, курсив — одна `_`  \n• до 3 тематических эмоджи во всём сообщении  \n• Не выдавай ``` и не возвращай JSON.\n",
              "role": "system"
            },
            {
              "content": "={{ JSON.stringify($json.gpt, null, 2) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        800,
        100
      ],
      "id": "c9ac8307-5dbc-410c-8e6d-1b0f12e396e0",
      "name": "digestGPT",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "meals",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "deleted",
              "condition": "is",
              "keyValue": "false"
            },
            {
              "keyName": "eaten_at",
              "condition": "lte",
              "keyValue": "={{ $json.dayEnd }}"
            },
            {
              "keyName": "eaten_at",
              "condition": "gte",
              "keyValue": "={{ $json.dayStart }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        420,
        100
      ],
      "id": "82fd009b-f358-453e-8781-84b8b9ad20f9",
      "name": "GET today",
      "alwaysOutputData": false,
      "credentials": {
        "supabaseApi": {
          "id": "Lv911zMyYiwiK2FZ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "# РАССЫЛКА каждый день в 21:00 по мск\n\n\n\n",
        "height": 352,
        "width": 1718,
        "color": 6
      },
      "id": "48159e44-3d84-41be-994a-95dfd79b8181",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://mlmjyvedeqdqtsmmxnjm.supabase.co/rest/v1/rpc/upsert_digest",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1sbWp5dmVkZXFkcXRzbW14bmptIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODM1MDk4MSwiZXhwIjoyMDYzOTI2OTgxfQ.ll2wVwEq28eM8NsqUQalbGlxLQB-FMoOI_Qgs8_5prg"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "_chat_id",
              "value": "={{ $('groupByUser').item.json.chat_id }}"
            },
            {
              "name": "_for_date",
              "value": "={{ $('groupByUser').item.json.gpt.date }}"
            },
            {
              "name": "_kcal",
              "value": "={{ $('groupByUser').item.json.gpt.kcal }}"
            },
            {
              "name": "_prot",
              "value": "={{ $('groupByUser').item.json.gpt.prot }}"
            },
            {
              "name": "_fat",
              "value": "={{ $('groupByUser').item.json.gpt.fat }}"
            },
            {
              "name": "_carb",
              "value": "={{ $('groupByUser').item.json.gpt.carb }}"
            },
            {
              "name": "_meals_json",
              "value": "={{ $('groupByUser').item.json.gpt.meals }}"
            },
            {
              "name": "_summary_md",
              "value": "={{ $('digestGPT').item.json.message.content }}"
            },
            {
              "name": "_msg_id",
              "value": "={{ $json.result.message_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1540,
        100
      ],
      "id": "7d358a85-16bc-4512-9f14-a48854568b5c",
      "name": "SAVE SUPA  digest",
      "credentials": {
        "httpHeaderAuth": {
          "id": "G6YhkSorlbr3ZIxC",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('groupByUser').item.json.chat_id }}",
        "text": "={{ $json[\"message\"][\"content\"] || $json }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1340,
        100
      ],
      "id": "e90a8e02-2bcf-4459-9f5b-8fa02e4aa123",
      "name": "SEND",
      "webhookId": "f28557c8-d474-47fe-9f04-5d6dbb9bd96c",
      "credentials": {
        "telegramApi": {
          "id": "gCihnoY2iryH0uMF",
          "name": "AI_Consultant_01p1_bot"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// убираем экранирование у формат-маркеров * и _\nif ($json.message?.content) {\n  $json.message.content = $json.message.content\n    // сначала двойные обратные слэши\n    .replace(/\\\\([*_])/g, '$1');\n}\nreturn $json;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1160,
        100
      ],
      "id": "818f4a4f-8de0-4f18-95c2-fd62a16ea6cd",
      "name": "Escape"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-06-15T12:55:16.736Z",
      "updatedAt": "2025-06-15T12:55:16.736Z",
      "id": "E3Jvcdicex5zM4E5",
      "name": "ИИздец"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-07-01T21:33:24.000Z",
  "versionId": "96957e3e-bd92-43e8-9dec-b32812a543f9"
}