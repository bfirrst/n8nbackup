{
  "active": false,
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe": {
      "main": [
        [
          {
            "node": "Set Text (voice)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text": {
      "main": [
        [
          {
            "node": "Set Text (final)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text (voice)": {
      "main": [
        [
          {
            "node": "Set Text (final)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text (final)": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "БИЗНЕС АССИСТЕНТ1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Typing On)": {
      "main": [
        [
          {
            "node": "Evolution API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "HTTP Request (Typing On)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Google Sheets2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI3",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "HTTP Request (Typing On)1": {
      "main": [
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets2": {
      "main": [
        [
          {
            "node": "HTTP Request (Typing On)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets3": {
      "main": [
        [
          {
            "node": "Evolution API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Google Sheets3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets4": {
      "main": [
        [
          {
            "node": "Evolution API3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets5": {
      "main": [
        [
          {
            "node": "Evolution API4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets6": {
      "main": [
        [
          {
            "node": "Evolution API5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Google Sheets9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Typing On)2": {
      "main": [
        [
          {
            "node": "Evolution API6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API5": {
      "main": [
        [
          {
            "node": "HTTP Request (Typing On)2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API6": {
      "main": [
        [
          {
            "node": "Google Sheets7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets7": {
      "main": [
        [
          {
            "node": "Evolution API7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Typing On)3": {
      "main": [
        [
          {
            "node": "Evolution API8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API2": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "HTTP Request (Typing On)3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Typing On)4": {
      "main": [
        [
          {
            "node": "Evolution API9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "HTTP Request (Typing On)4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API3": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Typing On)5": {
      "main": [
        [
          {
            "node": "Evolution API10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "main": [
        [
          {
            "node": "HTTP Request (Typing On)5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API4": {
      "main": [
        [
          {
            "node": "OpenAI2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Typing On)6": {
      "main": [
        [
          {
            "node": "Evolution API11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets8": {
      "main": [
        [
          {
            "node": "Evolution API12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API11": {
      "main": [
        [
          {
            "node": "Google Sheets8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets9": {
      "main": [
        [
          {
            "node": "HTTP Request (Typing On)6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "main": [
        [
          {
            "node": "Switch4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Typing On)7": {
      "main": [
        [
          {
            "node": "Evolution API13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch4": {
      "main": [
        [
          {
            "node": "Google Sheets10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (Typing On)8": {
      "main": [
        [
          {
            "node": "Evolution API14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets10": {
      "main": [
        [
          {
            "node": "HTTP Request (Typing On)7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets11": {
      "main": [
        [
          {
            "node": "HTTP Request (Typing On)8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI4": {
      "main": [
        [
          {
            "node": "OpenAI5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI5": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Google Sheets12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets12": {
      "main": [
        [
          {
            "node": "Evolution API16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API16": {
      "main": [
        [
          {
            "node": "Evolution API18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "OpenAI5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "If (AGGREGATED?)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets13": {
      "main": [
        [
          {
            "node": "If (Row exists?)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Google Sheets14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets14": {
      "main": [
        []
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Google Sheets15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets15": {
      "main": [
        []
      ]
    },
    "If (AGGREGATED?)": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If (Row exists?)": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-01T18:48:30.216Z",
  "id": "ABuCeLJ89s54yUKS",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "VEP WAPP",
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.data.message.audioMessage.mimetype }}",
                    "rightValue": "audio/ogg; codecs=opus",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "a9135976-c57f-483a-84fb-eb5d9c78f6de"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.body.data.message.conversation }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "705bd82a-f8b0-41e3-9a08-e49587753929",
                    "leftValue": "={{ $json.body.data.message?.imageMessage?.mimetype || $json.body.data.message?.documentMessage?.mimetype || '' }}",
                    "rightValue": "image/",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7d8d29dd-7113-4a2c-8a96-67fcc1f5ba35",
                    "leftValue": "={{ $json.body.data.message?.imageMessage?.mimetype || $json.body.data.message?.documentMessage?.mimetype || '' }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e1ae13f6-de30-4062-9142-7485a5dd7459",
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "1d73089c-8b68-422f-a36a-d775268114d7",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -900,
        100
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "054bfd0a-acfa-4d23-8e7a-4269437306f5",
      "name": "Transcribe",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -420,
        0
      ],
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{\n  // 1) из агрегатора (второй WF)\n  $json.body?.text\n  // 2) если кто-то уже положил текст ранее в $json.text\n  || $json.text\n  // 3) прямой вебхук WhatsApp\n  || $json.body?.data?.message?.conversation\n  || $json.body?.data?.message?.extendedTextMessage?.text\n  || $json.body?.message?.conversation\n  // 4) запасной вариант — пустая строка\n  || ''\n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0177c215-5529-429f-a706-514be5cac46e",
      "name": "Set Text",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -260,
        200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2b2ff60e-9772-4dc6-8dad-7de37ec83103",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -260,
        0
      ],
      "id": "1787c9f0-0c33-45fc-b0ba-92ed0abdc16c",
      "name": "Set Text (voice)"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2b2ff60e-9772-4dc6-8dad-7de37ec83103",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -80,
        100
      ],
      "id": "29b71663-9e4a-49d5-b719-827ed377a655",
      "name": "Set Text (final)"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {
          "responseFormat": "text"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        220,
        260
      ],
      "id": "115dd1ff-91da-4737-b6d2-66d727bbb520",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        420,
        260
      ],
      "id": "e0e13c2e-8e7b-4c26-af65-155652091916",
      "name": "Calculator1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Set Text (final)').item.json.text }}",
        "options": {
          "systemMessage": "=Ты — классификатор входящих сообщений клиента в чате.\nВерни СТРОГО ОДИН JSON-объект без пояснений и текста вокруг, со следующими полями:\n\n{\n  \"weight_bucket\": \"lt_60\" | \"60_100\" | \"gt_100\" | null,\n  \"weight_kg\": number | null,\n  \"knows_project\": true | false | null,\n  \"follow_ok\": \"yes\" | \"no\"\n}\n\nТебе передаются:\n- current_step: 1 | 2 | 3  (этап воронки)\n- user_message: текст последнего сообщения пользователя (без наших реплик)\n\nЗАДАЧИ И ПРАВИЛА:\n\n1) weight_kg — ТЕКУЩИЙ вес человека в кг.\n   - Ищи числовые упоминания веса в user_message.\n   - Если рядом есть маркеры \"кг\"/\"kg\"/\"килограмм\" — бери это число (последнее по тексту).\n   - Если маркеров нет, используй эвристику:\n       • Числа ≥ 150 считай ростом (в сантиметрах), НЕ воспринимай их как вес.\n       • Вес обычно в диапазоне 30–300. Если несколько кандидатов — возьми первый.\n   - Игнорируй ЦЕЛЕВОЙ вес (фразы \"хочу 55\", \"цель 60\", \"до 70\", \"сбросить до 65\" и т.п.) — это не текущий вес.\n   - Диапазоны \"63–64\", \"63-64\", \"63/64\" трактуй как 63 (левое число).\n   - Округляй до 1 знака после запятой. Если текущий вес определить нельзя — weight_kg = null.\n\n2) weight_bucket — корзина веса на основе ТЕКУЩЕГО weight_kg:\n   - Если weight_kg <= 60 → \"lt_60\"\n   - Если 60 < weight_kg <= 100 → \"60_100\"\n   - Если weight_kg > 100 → \"gt_100\"\n   - Если weight_kg = null → weight_bucket = null\n\n3) knows_project — знаком ли человек с проектом:\n   - true: явные признаки знакомости/подписки/опыта (\"знаю\", \"знаком\", \"слежу\", \"подписан\", \"уже был\", \"проходил\", \"участвовал\" и т.п.).\n   - false: явно не знаком / просит рассказать (\"не знаю\", \"впервые\", \"что это\", \"расскажите\" и т.п.).\n   - null: в сообщении не понятно.\n\n4) follow_ok — СЛЕДУЕТ ЛИ пользователь ТЕКУЩЕМУ шагу воронки (а не просто соглашается/отказывается):\n   - current_step = 1 (наш вопрос: \"Раньше пробовали работать в программах с нутрициологом?\"):\n       • \"yes\" — если ответил по сути (да/нет/описание опыта).\n       • \"no\" — если вместо ответа уходит в оффтоп/задаёт другие вопросы.\n   - current_step = 2 (наш вопрос: \"Скажите, пожалуйста, ВЕС, РОСТ, хронические заболевания и КАКОЙ ВЕС хотите\"):\n       • \"yes\" — если дал хотя бы одну запрошенную сущность (например, вес или рост, или заболевания/цель).\n       • \"no\" — если не дал ни одной из запрошенных сущностей и уходит в оффтоп.\n       • ВАЖНО: для weight_kg и weight_bucket учитываем ТОЛЬКО текущий вес (целевой вес игнорируем).\n   - current_step = 3 (мы голосом спрашиваем: \"Знакомы ли с проектом?\"):\n       • \"yes\" — если ответил по теме (знаком/незнаком и т.п.).\n       • \"no\" — если не ответил по сути, уходит в оффтоп/другие вопросы.\n\nФормат вывода: только JSON-объект БЕЗ текста вокруг, БЕЗ лишних полей.\n\nПРИМЕРЫ:\nuser_message: \"Рост 172, вес 63.5 кг, хочу 55\" (current_step=2)\n→ {\"weight_bucket\":\"60_100\",\"weight_kg\":63.5,\"knows_project\":null,\"follow_ok\":\"yes\"}\n\nuser_message: \"Привет! Я вас знаю, давно подписана. Сейчас 105кг.\" (current_step=1)\n→ {\"weight_bucket\":\"gt_100\",\"weight_kg\":105,\"knows_project\":true,\"follow_ok\":\"yes\"}\n\nuser_message: \"Что это за проект? Не знаю вас. 170см, 58\" (current_step=2)\n→ {\"weight_bucket\":\"lt_60\",\"weight_kg\":58,\"knows_project\":false,\"follow_ok\":\"yes\"}\n\nuser_message: \"Да, давайте!\" (current_step=1)\n→ {\"weight_bucket\":null,\"weight_kg\":null,\"knows_project\":null,\"follow_ok\":\"yes\"}\n\nuser_message: \"Цель 55. Рост 170\" (current_step=2)\n→ {\"weight_bucket\":null,\"weight_kg\":null,\"knows_project\":null,\"follow_ok\":\"yes\"}   // цель игнорируем, роста мало для веса\n\nuser_message: \"Не сейчас. А сколько стоит?\" (current_step=1)\n→ {\"weight_bucket\":null,\"weight_kg\":null,\"knows_project\":null,\"follow_ok\":\"no\"}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        240,
        100
      ],
      "id": "db4edd64-21e6-46bf-95cc-1c7c9fe0f4f2",
      "name": "БИЗНЕС АССИСТЕНТ1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "0ea67612-498f-434c-9f2d-a11e918b46c4/messages-upsert",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2220,
        100
      ],
      "id": "3d0d5298-0a33-40d5-8a89-625938ff7ce6",
      "name": "Webhook",
      "webhookId": "0ea67612-498f-434c-9f2d-a11e918b46c4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution-api-production-9e6a.up.railway.app/chat/getBase64FromMediaMessage/{{ $json.body.instance || 'wa-01' }}\n",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $json.body.apikey }}"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\n  message: {\n    key: {\n      id: $json.body.data.key.id,\n      remoteJid: $json.body.data.key.remoteJid\n    }\n  },\n  convertToMp4: false\n}) }}\n",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -740,
        0
      ],
      "id": "f25ae4cc-a8cc-45df-9efe-2ec64945b352",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "={{ $json.base64 ? 'base64' : $json.data?.base64 ? 'data.base64' : $json.result?.base64 ? 'result.base64' : '' }}",
        "options": {
          "fileName": "={{ $json.fileName || 'voice.ogg' }}",
          "mimeType": "={{ $json.mimetype || 'audio/ogg' }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -600,
        0
      ],
      "id": "37e7fbd7-5944-4bea-8f27-fb4c0e1054bf",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Switch').item.json.body.contact_id }}",
        "messageText": "Доброго дня )  \nМеня зовут Анастасия Веперс - я руководитель проекта,  дипломированный нутрициолог.   \n\nПодскажите пожалуйста раньше пробовали работать в программах с нутрициологом ?💐",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        1540,
        -60
      ],
      "id": "7e784bbc-8c29-4ab1-8da8-2aa7a75430f1",
      "name": "Evolution API1",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evolution-api-production-9e6a.up.railway.app/chat/sendPresence/wa-01",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "sdvsdgs37e4jgfvuh2g24rsdfsf"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  number: String(\n    $json.number\n    || $json.contact_id\n    || $node[\"Webhook\"].json.body?.from\n    || $node[\"Webhook\"].json.body?.sender\n    || ''\n  ).split('@')[0].replace(/\\D/g,''),\n  presence: 'composing',   // допустимо: 'composing' | 'paused' | 'recording'\n  delay: $json.typingDelayMs ?? 40000\n}) }}",
        "options": {}
      },
      "id": "7a958b2a-b42e-4696-98db-50bbe9966cbc",
      "name": "HTTP Request (Typing On)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        1220,
        -60
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "G6YhkSorlbr3ZIxC",
          "name": "Header Auth account"
        }
      },
      "onError": "continueRegularOutput",
      "notes": "Имитация набора (typing). Требует, чтобы в текущем item было поле remoteJid, иначе замените выражение на путь к JID из вашего вебхука."
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "contact_id",
              "lookupValue": "={{ $('Edit Fields1').item.json.contact_id }}"
            }
          ]
        },
        "combineFilters": "OR",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        740,
        100
      ],
      "id": "c9129523-4391-45fb-90c8-253da74958fd",
      "name": "Google Sheets",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{\n  // 1) то, что уже есть в текущем item\n  $json.contact_id\n  // 2) то, что посчитано в Edit Fields1 (берём первый item того узла)\n  || $items(\"Edit Fields1\")[0]?.json?.contact_id\n  // 3) прямой вебхук Evolution\n  || $json.body?.data?.key?.remoteJid\n  || $json.body?.sender\n  || $json.body?.from\n  // 4) если есть номер, собираем jid\n  || (()=>{\n        const phone = $json.phone || $items(\"Edit Fields1\")[0]?.json?.phone;\n        if (phone) return String(phone).replace(/\\D/g,'') + '@s.whatsapp.net';\n        return '';\n     })()\n  // 5) последний фолбэк\n  || 'unknown@s.whatsapp.net'\n}}",
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        320,
        260
      ],
      "id": "85aa13ad-e803-489e-a6eb-3f2583b5f48e",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "dac984c0-46e2-443e-9251-349f82856453",
              "leftValue": "={{ $items('Google Sheets').filter(i => Object.keys(i.json).length > 0).length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        880,
        100
      ],
      "id": "aa53fe8b-6b33-4bb1-9056-77400640ca11",
      "name": "If"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "73482944-918c-4ef2-8ea8-6b86298df2ed",
                    "leftValue": "={{ $json.step }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f8fcd211-6bf3-48af-93fb-3e237ee231a3",
                    "leftValue": "={{ $json.step }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d9457889-dfb5-4279-a4c3-2703e3c7a59f",
                    "leftValue": "={{ $json.step }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "76a13f81-63e1-488d-b700-1afede2a49cf",
                    "leftValue": "={{ $json.step }}",
                    "rightValue": 4,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "aa1a5f9e-d2d6-4d05-aba4-2c432e97cfa1",
                    "leftValue": "={{ $json.step }}",
                    "rightValue": 5,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1040,
        320
      ],
      "id": "c3e1bc4a-c8d1-4f27-99a7-7030ef1390f9",
      "name": "Switch1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "step": "1",
            "contact_id": "={{ $('Edit Fields1').item.json.contact_id }}",
            "name": "={{ $('Switch').item.json.body.name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "step",
              "displayName": "step",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "weight_kg",
              "displayName": "weight_kg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1060,
        -60
      ],
      "id": "08f88c94-a7ad-46e2-acf7-9dfbd7b425f1",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Switch1').item.json.contact_id }}",
        "messageText": "Я поняла Вас 🙌 😉 \nСкажите пожалуйста вес , рост,  хронические заболевания и какой вес хотите ?💐",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        1540,
        120
      ],
      "id": "4ad5235b-a780-4b68-bd4c-35d7ad709e1e",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evolution-api-production-9e6a.up.railway.app/chat/sendPresence/wa-01",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "sdvsdgs37e4jgfvuh2g24rsdfsf"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\n  number:  String(($json.contact_id\n                   || $json.body?.data?.key?.participant\n                   || $json.body?.data?.key?.remoteJid\n                   || $json.body?.sender\n                   || '')).split('@')[0].replace(/\\D/g,''),\n  presence: 'composing',\n  delay: 20000\n}) }}\n",
        "options": {}
      },
      "id": "95a102aa-e55e-49ec-a4c5-2521bc57f24c",
      "name": "HTTP Request (Typing On)1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        1380,
        120
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "G6YhkSorlbr3ZIxC",
          "name": "Header Auth account"
        }
      },
      "notes": "Имитация набора (typing). Требует, чтобы в текущем item было поле remoteJid, иначе замените выражение на путь к JID из вашего вебхука."
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "step": "2",
            "contact_id": "={{ $json.contact_id }}",
            "name": "={{ $('Switch').item.json.body.name }}"
          },
          "matchingColumns": [
            "contact_id"
          ],
          "schema": [
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "step",
              "displayName": "step",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "weight_kg",
              "displayName": "weight_kg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "nexttouch",
              "displayName": "nexttouch",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1220,
        120
      ],
      "id": "ce74f70d-60cf-4d67-985c-df7fe055f27e",
      "name": "Google Sheets2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-audio",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "media": "https://drive.google.com/uc?export=download&id=1_ljlE_2GNdp0RMHFeOwlwEEX8m-BmxZC",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        1700,
        320
      ],
      "id": "a7f3cc14-4df9-40c2-9632-9b8ef2298c93",
      "name": "Evolution API2",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "step": "3",
            "contact_id": "={{ $('Switch').item.json.body.contact_id }}",
            "weight_kg": "={{ $('Code').item.json.weight_kg }}"
          },
          "matchingColumns": [
            "contact_id"
          ],
          "schema": [
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "step",
              "displayName": "step",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "weight_kg",
              "displayName": "weight_kg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1540,
        320
      ],
      "id": "8fb0a22f-f6eb-41dd-bf33-7ab3127cf583",
      "name": "Google Sheets3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "73482944-918c-4ef2-8ea8-6b86298df2ed",
                    "leftValue": "={{ $('Code').item.json.weight_bucket }}",
                    "rightValue": "lt_60",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f8fcd211-6bf3-48af-93fb-3e237ee231a3",
                    "leftValue": "={{ $('Code').item.json.weight_bucket }}",
                    "rightValue": "60_100",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5f8acd0d-ffa9-4d31-bf04-65eb8a995fae",
                    "leftValue": "={{ $('Code').item.json.weight_bucket }}",
                    "rightValue": "gt_100",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1320,
        480
      ],
      "id": "f37af26b-5106-4d0b-bb69-150de7758263",
      "name": "Switch2"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-audio",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "media": "https://drive.google.com/uc?export=download&id=1HFjYmgGa8UbJhwRY2xY6UD-f52wEwS7s",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        1700,
        480
      ],
      "id": "1f9cad13-f963-466a-a373-9d0a7472e5dd",
      "name": "Evolution API3",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "step": "3",
            "contact_id": "={{ $('Switch1').item.json.contact_id }}",
            "weight_kg": "={{ $('Code').item.json.weight_kg }}"
          },
          "matchingColumns": [
            "contact_id"
          ],
          "schema": [
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "step",
              "displayName": "step",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "weight_kg",
              "displayName": "weight_kg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1540,
        480
      ],
      "id": "16879b9b-e69f-4a69-981b-5407989f026d",
      "name": "Google Sheets4",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-audio",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "media": "https://drive.google.com/uc?export=download&id=1HFjYmgGa8UbJhwRY2xY6UD-f52wEwS7s",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        1700,
        640
      ],
      "id": "915a04b8-4b5c-4e14-91da-b4cba8b9a529",
      "name": "Evolution API4",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "step": "3",
            "contact_id": "={{ $('Switch').item.json.body.contact_id }}",
            "weight_kg": "={{ $('Code').item.json.weight_kg }}"
          },
          "matchingColumns": [
            "contact_id"
          ],
          "schema": [
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "step",
              "displayName": "step",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "weight_kg",
              "displayName": "weight_kg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1540,
        640
      ],
      "id": "6c06721e-b333-4d0e-ac50-25fa0283b1b9",
      "name": "Google Sheets5",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Берём JSON от агента: поле \"output\" — это строка с JSON\nconst raw = $json.output ?? $json.response ?? $json.data ?? $json.message ?? $json.text ?? null;\n\nlet weight_kg = null;\nlet weight_bucket = null; // 'lt_60' | '60_100' | 'gt_100' | null\nlet knows_project = null; // true | false | null\nlet follow_ok = 'no';     // 'yes' | 'no'\n\nif (raw) {\n  try {\n    const parsed = (typeof raw === 'string') ? JSON.parse(raw) : raw;\n\n    // weight_kg\n    if (typeof parsed.weight_kg === 'number') {\n      weight_kg = parsed.weight_kg;\n    } else if (typeof parsed.weight_kg === 'string' && parsed.weight_kg.trim() !== '') {\n      const n = Number(parsed.weight_kg.replace(',', '.'));\n      weight_kg = Number.isFinite(n) ? n : null;\n    }\n\n    // weight_bucket (если агент не прислал — вычислим сами из weight_kg)\n    if (['lt_60','60_100','gt_100'].includes(parsed.weight_bucket)) {\n      weight_bucket = parsed.weight_bucket;\n    } else if (typeof weight_kg === 'number') {\n      if (weight_kg > 100) weight_bucket = 'gt_100';\n      else if (weight_kg > 60) weight_bucket = '60_100';\n      else weight_bucket = 'lt_60';\n    } else {\n      weight_bucket = null;\n    }\n\n    // knows_project\n    if (parsed.knows_project === true || parsed.knows_project === false || parsed.knows_project === null) {\n      knows_project = parsed.knows_project;\n    } else if (typeof parsed.knows_project === 'string') {\n      const s = parsed.knows_project.trim().toLowerCase();\n      knows_project = (s === 'true') ? true : (s === 'false' ? false : null);\n    }\n\n    // follow_ok\n    if (parsed.follow_ok === 'yes' || parsed.follow_ok === 'no') {\n      follow_ok = parsed.follow_ok;\n    }\n  } catch (e) {\n    // оставим дефолты\n  }\n}\n\nreturn [{\n  ...$json,\n  weight_kg,\n  weight_bucket,\n  knows_project,\n  follow_ok\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        100
      ],
      "id": "128012bf-ce8a-44eb-9de1-ae9ef8875436",
      "name": "Code"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "73482944-918c-4ef2-8ea8-6b86298df2ed",
                    "leftValue": "={{ $('Code').item.json.knows_project }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f8fcd211-6bf3-48af-93fb-3e237ee231a3",
                    "leftValue": "={{ $('Code').item.json.knows_project }}",
                    "rightValue": "false",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1320,
        920
      ],
      "id": "7bf7f5b2-31fa-4e8f-bf02-99e7270c7139",
      "name": "Switch3"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-audio",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "media": "https://drive.google.com/uc?export=download&id=1BGfJkWlQDQCHD2UPUz47IcCpSSbiWaJZ",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        1700,
        1020
      ],
      "id": "09511d54-bb94-45f4-a655-0dba63b2babd",
      "name": "Evolution API5",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "step": "4",
            "contact_id": "={{ $json.contact_id }}",
            "name": "={{ $json.name }}"
          },
          "matchingColumns": [
            "contact_id"
          ],
          "schema": [
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "step",
              "displayName": "step",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "weight_kg",
              "displayName": "weight_kg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1540,
        1020
      ],
      "id": "2d2cc6c5-3426-48bf-bdb8-03909e947270",
      "name": "Google Sheets6",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "VEPPERS",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "messageText": "Пара слов обо мне 🩷   \n\nМеня зовут Анастасия Веперс, я дипломированный нутрициолог, психолог, коуч ICF, психосамотолог, в непрерывной практике нахожусь 8 лет  \n\n☝️💯Со мной похудело более 3800 человек. Снимаю диагнозы: сахарный диабет, резистентность, ожирение, бесплодие, гипертония.    💪Помогаю сбросить вес и восстановить здоровье. Со мной работает команда из 30 кураторов. 🤝  \n\nКак мы помогаем похудеть: \n✅Работа происходит в группе в Ватсап в сопровождении куратора.  \n❤️Комфортные группы по 15-20 человек. \n✍️В группе веде‌тся ежедневная работа, фиксируется и анализируется Ваше питание.  \n🤝Психологическое, коучинговое и информационное сопровождение. \n👉Выдается меню.  \n📃Ежедневная(!) обратная связь по всем вопросам.  \n✍️Мы веде‌м за Вами пищевые дневники.  \n✅считать калории не нужно. Все уже просчитано за Вас. \n🌟конструктор меню 👍👉взаимозаменяемые продукты  (т.е. всегда есть выбор на Ваш вкус). \n💥доступные продукты питания (продаются в обычных магазинах). \n🎉очень простая в приготовлении еда.  \n\nПрограмма🌟Поможет раз и навсегда комфортно справиться с лишним весом и очень скоро обновить гардероб 👗👠 )  \n\nТакже улучшить здоровье, снять диагнозы: СД2, резистентность к инсулину, гипертония, ожирение, жировой гепотоз и тд.",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        2080,
        1020
      ],
      "id": "93995d52-d520-4e3b-9ece-fee3683ef622",
      "name": "Evolution API6",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution-api-production-9e6a.up.railway.app/chat/sendPresence/{{ $node[\"Webhook\"].json.body.instance || 'wa-01' }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "=sdvsdgs37e4jgfvuh2g24rsdfsf"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  number: String(\n    $('Edit Fields1').item.json.contact_id\n    || $json.contact_id\n    || $json.number\n    || $json.remoteJid\n    || $json.body?.data?.key?.remoteJid\n    || $json.body?.data?.key?.participant\n    || $json.body?.sender\n    || $json.from\n    || ''\n  ).split('@')[0].replace(/\\D/g,''),\n  presence: $json.presence || 'composing',   // 'composing' | 'recording'\n  delay: $json.PresenceComposingDelay ?? $json.typingDelayMs ?? 20000\n}) }}",
        "options": {}
      },
      "id": "7c5b1f4c-c5b4-41d6-a953-23e38f161c31",
      "name": "HTTP Request (Typing On)2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        1920,
        1020
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "G6YhkSorlbr3ZIxC",
          "name": "Header Auth account"
        }
      },
      "notes": "Имитация набора (typing). Требует, чтобы в текущем item было поле remoteJid, иначе замените выражение на путь к JID из вашего вебхука."
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "messageText": "=💸Стоимость   \n\n7100 руб.  (возможна рассрочка!) \n🔵Если оплачиваете СЕГОДНЯ в \n🔺течении суток, то (!)👉 \n🔺6200 руб. - подключение к Группе и работа в первый месяц (возможна оплата в 2 этапа по 3100 руб) \nПролонгация на следующий месяц (по необходимости) - 4000 руб в месяц.   \n\n🟢Дата старта: {{ $json['Дата старта'] }}   \n\n🔴Наши результаты можно посмотреть в Инстаграмм👇   \n\nhttps://instagram.com/a.vepers?utm_medium=copy_link   \n\nТелеграм https://t.me/+9oiL-YbTotY0MTdi  \n\nТелеграмм \"Самое интересное \" https://t.me/+evDmVWbiMcRiOGYy   \n\nСайт https://anastasiavepers.ru/   \n\nЕсли есть вопросы,  спрашивайте, я с удовольствием на них отвечу  💋🤝 ",
        "options_message": {
          "delay": 10000
        }
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        2500,
        1020
      ],
      "id": "df4697b8-e0c5-4cd4-9793-33aa4ca25580",
      "name": "Evolution API7",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1aVsjAorVhubrACj_YNSLy3t-rQYfBwjL1IQ_aBKRpEI",
          "mode": "list",
          "cachedResultName": "Активная база данных",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1aVsjAorVhubrACj_YNSLy3t-rQYfBwjL1IQ_aBKRpEI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1aVsjAorVhubrACj_YNSLy3t-rQYfBwjL1IQ_aBKRpEI/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2300,
        1020
      ],
      "id": "4c740dff-71be-49a1-8e2c-0b224e1342de",
      "name": "Google Sheets7",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "messageText": "={{ $node[\"OpenAI\"].json.message.content }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        2420,
        320
      ],
      "id": "07b788e6-ddd1-4287-88c3-4de1d43474b6",
      "name": "Evolution API8",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evolution-api-production-9e6a.up.railway.app/chat/sendPresence/wa-01",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "sdvsdgs37e4jgfvuh2g24rsdfsf"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  number: String(\n    $('Edit Fields1').item.json.contact_id\n    || $json.contact_id\n    || $json.number\n    || $json.remoteJid\n    || $json.body?.data?.key?.remoteJid\n    || $json.body?.data?.key?.participant\n    || $json.body?.sender\n    || $json.from\n    || ''\n  ).split('@')[0].replace(/\\D/g,''),\n  presence: $json.presence || 'composing',   // 'composing' | 'recording'\n  delay: $json.PresenceComposingDelay ?? $json.typingDelayMs ?? 20000\n}) }}",
        "options": {}
      },
      "id": "719bda8f-efd5-4ed4-acb1-294772977e8b",
      "name": "HTTP Request (Typing On)3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        2240,
        320
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "G6YhkSorlbr3ZIxC",
          "name": "Header Auth account"
        }
      },
      "notes": "Имитация набора (typing). Требует, чтобы в текущем item было поле remoteJid, иначе замените выражение на путь к JID из вашего вебхука."
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI-2025-04-14"
        },
        "messages": {
          "values": [
            {
              "content": "={{ \n  $json.text\n  || $node[\"Set Text (final)\"]?.json?.text\n  || $node[\"Transcribe\"]?.json?.text\n  || $node[\"Webhook\"].json.body?.data?.message?.conversation\n  || `рост: ${$json.height_cm || ''} см; вес: ${$json.weight_kg || $node[\"Code\"].json.weight_kg || ''} кг`\n}}"
            },
            {
              "content": "Ты — нутрициолог и женский коуч, общаешься с тёплой поддержкой и лёгкостью.\nНа вход ты получаешь рост (в см) и вес (в кг).\n\nТвоя задача:\n\nНайти рост и вес, посчитать индекс массы тела (ИМТ = вес / (рост в метрах)^2).\n\nОпределить категорию по стандарту ВОЗ:\n\n<18.5 — дефицит массы\n\n18.5–24.9 — норма\n\n25–29.9 — избыточный вес\n\n30–34.9 — ожирение I степени\n\n35–39.9 — ожирение II степени\n\n≥40 — ожирение III степени\n\nОтвет всегда должен начинаться словами:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела)…»\n\nДай результат в 3–4 предложения:\n\nУкажи рассчитанный ИМТ (с округлением до десятых) и категорию.\n\nЕсли ИМТ в норме: похвали («вы прекрасно справляетесь 🌸» или «вы в гармонии со своим телом 💃»), предупреди, что от 25 начинается «лишний вес», и важно закрепить результат.\n\nЕсли ИМТ выше нормы: подбодри, добавь энергию («это можно легко исправить ✨»), покажи, что результат достижим.\n\nЕсли дефицит: мягко укажи на риски («организму нужно больше сил 🌸»), добавь заботы и надежды.\n\nВсегда пиши в женском стиле, дружелюбно, с эмодзи, как будто поддерживаешь подругу.\n\nЗаверши лёгким намёком на программу, без давления:\n«В Стройняшках мы мягко ведём шаг за шагом к комфортному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»\n\nФормат ответа:\n— 3–4 живых предложения с эмодзи.\n— Никаких списков и таблиц.\n\n🔹 Примеры\n\nВвод: «Рост 170, вес 63»\nВывод:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела) — он равен 21,8 🌸 Это отличная норма, вы в гармонии со своим телом! 💃 Важно закрепить результат, ведь со временем ситуация может измениться, и поддержка очень помогает. В Стройняшках мы мягко ведём шаг за шагом к комфортному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»\n\nВвод: «Рост 172, вес 92»\nВывод:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела) — получилось 31,1 ✨ Это уже ожирение I степени, но не волнуйтесь 🙌 Всё можно исправить, достаточно внести небольшие изменения в питание и режим. Мы будем поддерживать вас на каждом шаге, и результат обязательно станет вашим достижением 💖 В Стройняшках мы мягко ведём шаг за шагом к комфортному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»\n\nВвод: «Рост 165, вес 47»\nВывод:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела) — он равен 17,3 🌸 Это дефицит массы, организму сейчас не хватает сил. Но всё можно восстановить: сбалансированное питание и забота помогут вернуть энергию и красоту ✨ В Стройняшках мы мягко ведём шаг за шагом к гармоничному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1900,
        320
      ],
      "id": "c7b5d30d-09d9-4580-a83d-27804d5d14b1",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "messageText": "={{ $node[\"OpenAI1\"].json.message.content }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        2420,
        480
      ],
      "id": "c52bcbe5-29a2-4dad-9cef-0dccf62063ce",
      "name": "Evolution API9",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evolution-api-production-9e6a.up.railway.app/chat/sendPresence/wa-01",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "sdvsdgs37e4jgfvuh2g24rsdfsf"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  number: String(\n    $('Edit Fields1').item.json.contact_id\n    || $json.contact_id\n    || $json.number\n    || $json.remoteJid\n    || $json.body?.data?.key?.remoteJid\n    || $json.body?.data?.key?.participant\n    || $json.body?.sender\n    || $json.from\n    || ''\n  ).split('@')[0].replace(/\\D/g,''),\n  presence: $json.presence || 'composing',   // 'composing' | 'recording'\n  delay: $json.PresenceComposingDelay ?? $json.typingDelayMs ?? 20000\n}) }}",
        "options": {}
      },
      "id": "f161c2e1-7ec7-449d-9489-0b97b604c402",
      "name": "HTTP Request (Typing On)4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        2240,
        480
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "G6YhkSorlbr3ZIxC",
          "name": "Header Auth account"
        }
      },
      "notes": "Имитация набора (typing). Требует, чтобы в текущем item было поле remoteJid, иначе замените выражение на путь к JID из вашего вебхука."
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI-2025-04-14"
        },
        "messages": {
          "values": [
            {
              "content": "={{ \n  $json.text\n  || $node[\"Set Text (final)\"]?.json?.text\n  || $node[\"Transcribe\"]?.json?.text\n  || $node[\"Webhook\"].json.body?.data?.message?.conversation\n  || `рост: ${$json.height_cm || ''} см; вес: ${$json.weight_kg || $node[\"Code\"].json.weight_kg || ''} кг`\n}}"
            },
            {
              "content": "Ты — нутрициолог и женский коуч, общаешься с тёплой поддержкой и лёгкостью.\nНа вход ты получаешь рост (в см) и вес (в кг).\n\nТвоя задача:\n\nНайти рост и вес, посчитать индекс массы тела (ИМТ = вес / (рост в метрах)^2).\n\nОпределить категорию по стандарту ВОЗ:\n\n<18.5 — дефицит массы\n\n18.5–24.9 — норма\n\n25–29.9 — избыточный вес\n\n30–34.9 — ожирение I степени\n\n35–39.9 — ожирение II степени\n\n≥40 — ожирение III степени\n\nОтвет всегда должен начинаться словами:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела)…»\n\nДай результат в 3–4 предложения:\n\nУкажи рассчитанный ИМТ (с округлением до десятых) и категорию.\n\nЕсли ИМТ в норме: похвали («вы прекрасно справляетесь 🌸» или «вы в гармонии со своим телом 💃»), предупреди, что от 25 начинается «лишний вес», и важно закрепить результат.\n\nЕсли ИМТ выше нормы: подбодри, добавь энергию («это можно легко исправить ✨»), покажи, что результат достижим.\n\nЕсли дефицит: мягко укажи на риски («организму нужно больше сил 🌸»), добавь заботы и надежды.\n\nВсегда пиши в женском стиле, дружелюбно, с эмодзи, как будто поддерживаешь подругу.\n\nЗаверши лёгким намёком на программу, без давления:\n«В Стройняшках мы мягко ведём шаг за шагом к комфортному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»\n\nФормат ответа:\n— 3–4 живых предложения с эмодзи.\n— Никаких списков и таблиц.\n\n🔹 Примеры\n\nВвод: «Рост 170, вес 63»\nВывод:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела) — он равен 21,8 🌸 Это отличная норма, вы в гармонии со своим телом! 💃 Важно закрепить результат, ведь со временем ситуация может измениться, и поддержка очень помогает. В Стройняшках мы мягко ведём шаг за шагом к комфортному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»\n\nВвод: «Рост 172, вес 92»\nВывод:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела) — получилось 31,1 ✨ Это уже ожирение I степени, но не волнуйтесь 🙌 Всё можно исправить, достаточно внести небольшие изменения в питание и режим. Мы будем поддерживать вас на каждом шаге, и результат обязательно станет вашим достижением 💖 В Стройняшках мы мягко ведём шаг за шагом к комфортному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»\n\nВвод: «Рост 165, вес 47»\nВывод:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела) — он равен 17,3 🌸 Это дефицит массы, организму сейчас не хватает сил. Но всё можно восстановить: сбалансированное питание и забота помогут вернуть энергию и красоту ✨ В Стройняшках мы мягко ведём шаг за шагом к гармоничному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1900,
        480
      ],
      "id": "016795a1-b136-4a2a-bf5a-b101c8bc3d0c",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "messageText": "={{ $node[\"OpenAI2\"].json.message.content }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        2420,
        640
      ],
      "id": "64670ec2-6bef-40a9-beb9-6d88e52688c3",
      "name": "Evolution API10",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evolution-api-production-9e6a.up.railway.app/chat/sendPresence/wa-01",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "sdvsdgs37e4jgfvuh2g24rsdfsf"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  number: String(\n    $('Edit Fields1').item.json.contact_id\n    || $json.contact_id\n    || $json.number\n    || $json.remoteJid\n    || $json.body?.data?.key?.remoteJid\n    || $json.body?.data?.key?.participant\n    || $json.body?.sender\n    || $json.from\n    || ''\n  ).split('@')[0].replace(/\\D/g,''),\n  presence: $json.presence || 'composing',   // 'composing' | 'recording'\n  delay: $json.PresenceComposingDelay ?? $json.typingDelayMs ?? 20000\n}) }}",
        "options": {}
      },
      "id": "61dedce5-9c97-43c1-973a-3ce4f21a4ca5",
      "name": "HTTP Request (Typing On)5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        2240,
        640
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "G6YhkSorlbr3ZIxC",
          "name": "Header Auth account"
        }
      },
      "onError": "continueRegularOutput",
      "notes": "Имитация набора (typing). Требует, чтобы в текущем item было поле remoteJid, иначе замените выражение на путь к JID из вашего вебхука."
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI-2025-04-14"
        },
        "messages": {
          "values": [
            {
              "content": "={{ \n  $json.text\n  || $node[\"Set Text (final)\"]?.json?.text\n  || $node[\"Transcribe\"]?.json?.text\n  || $node[\"Webhook\"].json.body?.data?.message?.conversation\n  || `рост: ${$json.height_cm || ''} см; вес: ${$json.weight_kg || $node[\"Code\"].json.weight_kg || ''} кг`\n}}"
            },
            {
              "content": "Ты — нутрициолог и женский коуч, общаешься с тёплой поддержкой и лёгкостью.\nНа вход ты получаешь рост (в см) и вес (в кг).\n\nТвоя задача:\n\nНайти рост и вес, посчитать индекс массы тела (ИМТ = вес / (рост в метрах)^2).\n\nОпределить категорию по стандарту ВОЗ:\n\n<18.5 — дефицит массы\n\n18.5–24.9 — норма\n\n25–29.9 — избыточный вес\n\n30–34.9 — ожирение I степени\n\n35–39.9 — ожирение II степени\n\n≥40 — ожирение III степени\n\nОтвет всегда должен начинаться словами:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела)…»\n\nДай результат в 3–4 предложения:\n\nУкажи рассчитанный ИМТ (с округлением до десятых) и категорию.\n\nЕсли ИМТ в норме: похвали («вы прекрасно справляетесь 🌸» или «вы в гармонии со своим телом 💃»), предупреди, что от 25 начинается «лишний вес», и важно закрепить результат.\n\nЕсли ИМТ выше нормы: подбодри, добавь энергию («это можно легко исправить ✨»), покажи, что результат достижим.\n\nЕсли дефицит: мягко укажи на риски («организму нужно больше сил 🌸»), добавь заботы и надежды.\n\nВсегда пиши в женском стиле, дружелюбно, с эмодзи, как будто поддерживаешь подругу.\n\nЗаверши лёгким намёком на программу, без давления:\n«В Стройняшках мы мягко ведём шаг за шагом к комфортному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»\n\nФормат ответа:\n— 3–4 живых предложения с эмодзи.\n— Никаких списков и таблиц.\n\n🔹 Примеры\n\nВвод: «Рост 170, вес 63»\nВывод:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела) — он равен 21,8 🌸 Это отличная норма, вы в гармонии со своим телом! 💃 Важно закрепить результат, ведь со временем ситуация может измениться, и поддержка очень помогает. В Стройняшках мы мягко ведём шаг за шагом к комфортному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»\n\nВвод: «Рост 172, вес 92»\nВывод:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела) — получилось 31,1 ✨ Это уже ожирение I степени, но не волнуйтесь 🙌 Всё можно исправить, достаточно внести небольшие изменения в питание и режим. Мы будем поддерживать вас на каждом шаге, и результат обязательно станет вашим достижением 💖 В Стройняшках мы мягко ведём шаг за шагом к комфортному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»\n\nВвод: «Рост 165, вес 47»\nВывод:\n«Исходя из Ваших данных, ИМТ (Индекс массы тела) — он равен 17,3 🌸 Это дефицит массы, организму сейчас не хватает сил. Но всё можно восстановить: сбалансированное питание и забота помогут вернуть энергию и красоту ✨ В Стройняшках мы мягко ведём шаг за шагом к гармоничному результату 💕\n\nПодскажите, вы знакомы с нами, с условиями проекта?)»",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1900,
        640
      ],
      "id": "7f341b4d-c863-4f6c-a7e3-e869e427da0b",
      "name": "OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "messageText": "Здорово снова видеть вас рядом! 💚 Вы знаете наш подход — мягко, по делу и с результатом. Ниже — актуальные условия и ближайший старт 👇",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        1920,
        860
      ],
      "id": "e81c3564-6d86-4a28-ae46-3adbe376498b",
      "name": "Evolution API11",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evolution-api-production-9e6a.up.railway.app/chat/sendPresence/wa-01",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "sdvsdgs37e4jgfvuh2g24rsdfsf"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  number: String(\n    $('Edit Fields1').item.json.contact_id\n    || $json.contact_id\n    || $json.number\n    || $json.remoteJid\n    || $json.body?.data?.key?.remoteJid\n    || $json.body?.sender\n    || $json.from\n    || ''\n  ).split('@')[0].replace(/\\D/g,''),\n  // для твоего инстанса presence/delay должны быть В КОРНЕ\n  presence: 'composing',          // или 'recording'\n  delay: ($json.PresenceComposingDelay ?? $json.typingDelayMs ?? 20000)\n}) }}\n\n",
        "options": {}
      },
      "id": "3ce925fd-5e15-4517-829c-4e32ba4cbab8",
      "name": "HTTP Request (Typing On)6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        1700,
        860
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "G6YhkSorlbr3ZIxC",
          "name": "Header Auth account"
        }
      },
      "notes": "Имитация набора (typing). Требует, чтобы в текущем item было поле remoteJid, иначе замените выражение на путь к JID из вашего вебхука."
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "wa-01",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "messageText": "=💸Стоимость   \n\n7100 руб.  (возможна рассрочка!) \n🔵Если оплачиваете СЕГОДНЯ в \n🔺течении суток, то (!)👉 \n🔺6200 руб. - подключение к Группе и работа в первый месяц (возможна оплата в 2 этапа по 3100 руб) \nПролонгация на следующий месяц (по необходимости) - 4000 руб в месяц.   \n\n🟢Дата старта: {{ $json['Дата старта'] }}   \n\n🔴Наши результаты можно посмотреть в Инстаграмм👇   \n\nhttps://instagram.com/a.vepers?utm_medium=copy_link   \n\nТелеграм https://t.me/+9oiL-YbTotY0MTdi  \n\nТелеграмм \"Самое интересное \" https://t.me/+evDmVWbiMcRiOGYy   \n\nСайт https://anastasiavepers.ru/   \n\nЕсли есть вопросы,  спрашивайте, я с удовольствием на них отвечу  💋🤝 ",
        "options_message": {
          "delay": 10000
        }
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        2300,
        860
      ],
      "id": "05f186db-b64e-41c6-95a8-186fdf71a7cf",
      "name": "Evolution API12",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1aVsjAorVhubrACj_YNSLy3t-rQYfBwjL1IQ_aBKRpEI",
          "mode": "list",
          "cachedResultName": "Активная база данных",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1aVsjAorVhubrACj_YNSLy3t-rQYfBwjL1IQ_aBKRpEI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1aVsjAorVhubrACj_YNSLy3t-rQYfBwjL1IQ_aBKRpEI/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2080,
        860
      ],
      "id": "23246aee-4124-440f-a597-9552184dacb5",
      "name": "Google Sheets8",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "step": "4",
            "contact_id": "={{ $json.contact_id }}",
            "name": "={{ $json.name }}"
          },
          "matchingColumns": [
            "contact_id"
          ],
          "schema": [
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "step",
              "displayName": "step",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "weight_kg",
              "displayName": "weight_kg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1540,
        860
      ],
      "id": "5c76e429-3755-4ed8-bf4b-b2d7e2728043",
      "name": "Google Sheets9",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d76bcca3-b1bd-45dd-bdef-bc1f0e56e1c5",
                    "leftValue": "={{ (JSON.parse(($items(\"OpenAI3\")[0]?.json?.message?.content) || \"{}\")).answer }}",
                    "rightValue": "full",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b7f20159-4ce8-417e-905a-17a07d280c59",
                    "leftValue": "={{ (JSON.parse(($items(\"OpenAI3\")[0]?.json?.message?.content) || \"{}\")).answer }}",
                    "rightValue": "split",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "171f4d59-e35f-48a6-b4d6-444f06e23ecf",
                    "leftValue": "={{ (JSON.parse(($items(\"OpenAI3\")[0]?.json?.message?.content) || \"{}\")).answer }}",
                    "rightValue": "other",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1020,
        780
      ],
      "id": "9440618d-aac9-4778-8269-873fcbbf703d",
      "name": "Switch4"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI-2025-04-14"
        },
        "messages": {
          "values": [
            {
              "content": "Ты — классификатор ответа клиента по способу оплаты.\nВерни СТРОГО один JSON-объект БЕЗ пояснений и текста вокруг ровно в таком виде:\n\n{\n  \"answer\": \"full\" | \"split\" | \"other\",\n  \"full_amount\": number | null,\n  \"part_amount\": number | null\n}\n\nПравила:\n1) \"full\" — если человек явно согласен оплатить полностью сейчас/сегодня/ ИЛИ упоминает 6200 (например: «перевожу 6200», «оплачу полностью», «готов оплатить целиком»).\n2) \"split\" — если человек хочет оплатить в 2 этапа/в рассрочку/частями, упоминает «по 3100», «двумя платежами», «в два платежа», «50/50», «частями», «рассрочка».\n3) \"other\" — любой другой ответ: уточняющие вопросы, «подумаю», «позже», обсуждение не про способ оплаты, упоминание 4000 (это цена пролонгации, НЕ первый платёж), молчание по сути и т.д.\n\nНормализация чисел:\n- Считай 6200 независимо от пробелов/знаков («6 200», «6,200», «6200р», «6200 руб» и т.п.).\n- Считай 3100 аналогично («3 100», «3,100» и т.п.).\n- Игнорируй числа не относящиеся к первому платежу (например «4000» — это не первый платеж, не повод для \"split\" или \"full\").\n\nПоля в ответе:\n- \"answer\": только одно из \"full\" | \"split\" | \"other\".\n- \"full_amount\": 6200 если answer=\"full\", иначе null.\n- \"part_amount\": 3100 если answer=\"split\" (2 платежа), иначе null.\n\nВерни ТОЛЬКО JSON-объект, без комментариев и без текста вокруг.",
              "role": "system"
            },
            {
              "content": "={{ \n  $json.text\n  || $node[\"Set Text (final)\"]?.json?.text\n  || $node[\"Transcribe\"]?.json?.text\n  || $node[\"Webhook\"].json.body?.data?.message?.conversation\n}}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1340,
        640
      ],
      "id": "5d6d2daa-bfc9-4e6a-af54-5ea1ec7422a3",
      "name": "OpenAI3",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $node[\"Webhook\"].json.body.instance || 'wa-01' }}",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "messageText": "Оплатить можете по ссылке удобным для вас способом через Робокассу👇\n\nhttps://auth.robokassa.ru/merchant/Invoice/i0FzQfluCUKk2MhP85XfQw\n\n6200 рублей, будем очень признательны за оплату по СБП🙏\nНапишите как сделаете оплату и пришлите скриншот, я сразу же передам ваш контакт главному куратору и добавим вас в группу",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        -440,
        640
      ],
      "id": "ac0f9311-a9fe-4743-96c2-b10a56b9f553",
      "name": "Evolution API13",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evolution-api-production-9e6a.up.railway.app/chat/sendPresence/wa-01",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "sdvsdgs37e4jgfvuh2g24rsdfsf"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  number: String(\n           $node[\"Webhook\"].json.body.data?.key?.remoteJid\n        || $node[\"Webhook\"].json.body.data?.key?.participant\n        || $node[\"Webhook\"].json.body.sender\n        || ''\n       ).split('@')[0].replace(/\\D/g,''),\n  presence: 'composing',\n  delay: $json.typingDelayMs ?? 30000\n}) }}",
        "options": {}
      },
      "id": "e7e9dc7d-71e2-418a-afbf-8b82651a2205",
      "name": "HTTP Request (Typing On)7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -620,
        640
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "G6YhkSorlbr3ZIxC",
          "name": "Header Auth account"
        }
      },
      "notes": "Имитация набора (typing). Требует, чтобы в текущем item было поле remoteJid, иначе замените выражение на путь к JID из вашего вебхука."
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $node[\"Webhook\"].json.body.instance || 'wa-01' }}",
        "remoteJid": "={{ $('Edit Fields1').item.json.contact_id }}",
        "messageText": "Оплатить можете по ссылке удобным для вас способом через Робокассу👇\n\nhttps://auth.robokassa.ru/merchant/Invoice/27bnWwf_UU6s3_PlSwAexg\n\n3100 рублей, будем очень признательны за оплату по СБП🙏\nНапишите как сделаете оплату и пришлите скриншот, я сразу же передам ваш контакт главному куратору и добавим вас в группу",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        -440,
        780
      ],
      "id": "058bccc0-7c2b-4570-bd7b-b1b37a0bfde9",
      "name": "Evolution API14",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://evolution-api-production-9e6a.up.railway.app/chat/sendPresence/wa-01",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "sdvsdgs37e4jgfvuh2g24rsdfsf"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ ({\n  number: String(\n           $node[\"Webhook\"].json.body.data?.key?.remoteJid\n        || $node[\"Webhook\"].json.body.data?.key?.participant\n        || $node[\"Webhook\"].json.body.sender\n        || ''\n       ).split('@')[0].replace(/\\D/g,''),\n  presence: 'composing',\n  delay: $json.typingDelayMs ?? 30000\n}) }}",
        "options": {}
      },
      "id": "c174ecf5-72e6-4ead-8bab-43ea11a9c202",
      "name": "HTTP Request (Typing On)8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -620,
        780
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "G6YhkSorlbr3ZIxC",
          "name": "Header Auth account"
        }
      },
      "notes": "Имитация набора (typing). Требует, чтобы в текущем item было поле remoteJid, иначе замените выражение на путь к JID из вашего вебхука."
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $node[\"Webhook\"].json.body.instance || 'wa-01' }}",
        "remoteJid": "=79898517307@s.whatsapp.net",
        "messageText": "={{ \n  'Лид на этапе оплаты — сообщение:\\n\\n'\n  + 'Имя: ' \n  + ($json.name || $node[\"Webhook\"].json.body.data?.pushName || '—') + '\\n'\n  + 'Телефон: +' \n  + String(($node[\"Webhook\"].json.body.data?.key?.remoteJid || $node[\"Webhook\"].json.body?.sender || ''))\n      .split('@')[0].replace(/\\D/g,'') + '\\n'\n  + 'Текст клиента: ' \n  + ($node[\"Set Text (final)\"].json?.text \n      || $node[\"Webhook\"].json.body?.data?.message?.conversation \n      || '[нет текста]')\n}}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        -820,
        940
      ],
      "id": "aa6a27ea-3c59-496d-8886-b216c2db0914",
      "name": "Evolution API15",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "step": "5",
            "contact_id": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
            "name": "={{ $('Webhook').item.json.body.data.pushName }}"
          },
          "matchingColumns": [
            "contact_id"
          ],
          "schema": [
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "step",
              "displayName": "step",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "weight_kg",
              "displayName": "weight_kg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -820,
        640
      ],
      "id": "1c75c57f-6e09-4f63-aa2d-16bc0f060329",
      "name": "Google Sheets10",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "step": "5",
            "contact_id": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
            "name": "={{ $('Webhook').item.json.body.data.pushName }}"
          },
          "matchingColumns": [
            "contact_id"
          ],
          "schema": [
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "step",
              "displayName": "step",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "weight_kg",
              "displayName": "weight_kg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -820,
        780
      ],
      "id": "7bafa421-14bf-480f-a5ab-291688897257",
      "name": "Google Sheets11",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-2024-11-20",
          "mode": "list",
          "cachedResultName": "GPT-4O-2024-11-20"
        },
        "text": "текст с картинки",
        "inputType": "base64",
        "binaryPropertyName": "file",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -140,
        640
      ],
      "id": "002ab299-9fdc-4389-9db2-7ca97ef6fa20",
      "name": "OpenAI4",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution-api-production-9e6a.up.railway.app/chat/getBase64FromMediaMessage/{{ $node[\"Webhook\"].json.body.instance || 'wa-01' }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $json.body.apikey }}"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\n  message: {\n    key: {\n      id: $node[\"Webhook\"].json.body.data.key.id,\n      remoteJid: $node[\"Webhook\"].json.body.data.key.remoteJid\n    }\n  },\n  convertToMp4: false\n}) }}",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -860,
        360
      ],
      "id": "d53052dd-1342-4656-a856-e61cc5fee61e",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "binaryPropertyName": "file",
        "options": {
          "fileName": "={{ $json.fileName || 'receipt.jpg' }}",
          "mimeType": "={{ $json.mimetype || 'image/jpeg' }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -680,
        360
      ],
      "id": "434ed586-5ab0-428e-a77f-afca248ce3f3",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI-2025-04-14"
        },
        "messages": {
          "values": [
            {
              "content": "Ты парсер чеков. Верни ТОЛЬКО JSON без текста и без ```.\n\nСхема:\n{\n  \"receipt\": \"yes|no|uncertain\",\n  \"paid\": \"yes|no|uncertain\",\n  \"amount\": number|null,\n  \"method\": \"sbp|card|transfer|cash|unknown\",\n  \"confidence\": number  // 0..1\n}\n\nЕсли не уверено — ставь \"uncertain\" и amount=null.\nСумму — числом (в рублях) без пробелов и валюты.",
              "role": "system"
            },
            {
              "content": "={{ $json.content }}\n{{ $json.text }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        0,
        640
      ],
      "id": "2ec9a024-882c-4137-8e5f-03322be43708",
      "name": "OpenAI5",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let o = {};\ntry { o = JSON.parse($json.message?.content || '{}'); } catch(e) {}\n\nconst base64 = $node[\"HTTP Request1\"].json?.base64 \n            || $node[\"HTTP Request1\"].json?.result?.base64 \n            || null;\n\nconst mimetype = $node[\"HTTP Request1\"].json?.mimetype || 'image/jpeg';\nconst fileName = $node[\"HTTP Request1\"].json?.fileName || (mimetype === 'application/pdf' ? 'receipt.pdf' : 'receipt.jpg');\n\nreturn [{\n  // из OpenAI5\n  receipt: o.receipt || 'uncertain',\n  paid: o.paid || 'uncertain',\n  amount: Number.isFinite(o.amount) ? o.amount : null,\n  method: o.method || 'unknown',\n\n  // сервисные поля\n  is_paid: (o.paid === 'yes'),\n  name: $node[\"Webhook\"].json.body?.data?.pushName || '',\n  phone: String($node[\"Webhook\"].json.body?.data?.key?.remoteJid || $node[\"Webhook\"].json.body?.sender || '').split('@')[0].replace(/\\D/g,''),\n  caption_or_text: $node[\"Webhook\"].json.body?.data?.message?.imageMessage?.caption \n                 || $node[\"Webhook\"].json.body?.data?.message?.conversation || '',\n\n  // для отправки файла\n  base64,\n  mimetype,\n  fileName\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        300,
        640
      ],
      "id": "e8e1badb-9310-419f-8941-bb1e6b3dd83b",
      "name": "Code1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f69fbc8c-cc54-45ce-bc38-97b15e8c34a3",
              "leftValue": "={{ $('OpenAI5').item.json.message.content.paid }}",
              "rightValue": "yes",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        500,
        640
      ],
      "id": "8f9c6d79-ed95-403e-9394-c8fad8f64b79",
      "name": "If1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $node[\"Webhook\"].json.body.instance || 'wa-01' }}",
        "remoteJid": "=79898517307@s.whatsapp.net",
        "messageText": "=✅ Клиент оплатил\nИмя: {{ $json.name }}\nТелефон: +{{ $('If1').item.json.phone }}\nСумма: {{ $('OpenAI5').item.json.message.content.amount }}\nМетод: {{ $('OpenAI5').item.json.message.content.method }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        60,
        860
      ],
      "id": "99583ed1-c318-4dcb-8518-eee9bf562da4",
      "name": "Evolution API16",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $node[\"Webhook\"].json.body.instance || 'wa-01' }}",
        "remoteJid": "=79898517307@s.whatsapp.net",
        "messageText": "=⚠️ лид прислал скриншот оплаты, но система не распознала оплату\n\nИмя: {{ $json.name }}\nТелефон: +{{ $('If1').item.json.phone }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        500,
        860
      ],
      "id": "d8ced697-a762-4ab2-a3d9-ae57e7615994",
      "name": "Evolution API17",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Вотсап",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "step": "оплачено",
            "contact_id": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
            "name": "={{ $('Webhook').item.json.body.data.pushName }}"
          },
          "matchingColumns": [
            "contact_id"
          ],
          "schema": [
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "step",
              "displayName": "step",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "weight_kg",
              "displayName": "weight_kg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -80,
        860
      ],
      "id": "487dfc8d-c3a0-4fbc-af56-126feae7972d",
      "name": "Google Sheets12",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-image",
        "instanceName": "={{ $node[\"Webhook\"].json.body.instance || 'wa-01' }}",
        "remoteJid": "=79898517307@s.whatsapp.net",
        "media": "={{ $('If1').item.json.base64 }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api-eng.evolutionApi",
      "typeVersion": 1,
      "position": [
        200,
        860
      ],
      "id": "82a96855-dcc2-4344-871f-8b2533ea217b",
      "name": "Evolution API18",
      "credentials": {
        "evolutionApi": {
          "id": "YF67B9nMmE69vgvN",
          "name": "Evolution account 2"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "file",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -260,
        360
      ],
      "id": "7fa15ed6-7adc-4854-aa2e-4b45f9f1b9ce",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f69fbc8c-cc54-45ce-bc38-97b15e8c34a3",
              "leftValue": "={{$binary.file.mimeType}}",
              "rightValue": "application/pdf",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -500,
        360
      ],
      "id": "e049b095-a5df-4793-9e9c-94b37402bf13",
      "name": "If2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7a1bc435-55e8-4180-8e8b-6b1549813d12",
              "name": "phone",
              "value": "={{ \n  (\n    $json.body?.data?.key?.remoteJid\n    || $json.body?.from\n    || $json.from\n    || $json.body?.sender\n    || $json.data?.key?.remoteJid\n    || $json.remoteJid\n    || $json.contact_id\n    || $json.phone\n    || ''\n  ).toString().split('@')[0].replace(/\\D/g, '')\n}}",
              "type": "string"
            },
            {
              "id": "c5dd7444-ccf6-4c84-b27a-5dda06daa588",
              "name": "text",
              "value": "={{ \n  $json.body?.data?.message?.conversation\n  || $json.body?.data?.message?.extendedTextMessage?.text\n  || $json.body?.text\n  || $json.text           // вдруг уже есть наверху\n  || ''\n}}",
              "type": "string"
            },
            {
              "id": "57747cdb-749e-4134-9789-47f72b75356c",
              "name": "stage",
              "value": "={{ $json.body?.stage || 'bmi' }}",
              "type": "string"
            },
            {
              "id": "33dc288d-d221-4971-8385-932047188471",
              "name": "now",
              "value": "={{ Date.now() }}",
              "type": "string"
            },
            {
              "id": "c97c9878-1ae4-4284-a488-66e1975491d3",
              "name": "key",
              "value": "={{\n  (\n    (\n      $json.body?.data?.key?.remoteJid\n      || $json.body?.from\n      || $json.from\n      || $json.body?.sender\n      || $json.data?.key?.remoteJid\n      || $json.remoteJid\n      || $json.contact_id\n      || $json.phone\n      || ''\n    ).toString().split('@')[0].replace(/\\D/g,'')\n  ) + ':' + ($json.body?.stage || $json.stage || 'bmi')\n}}",
              "type": "string"
            },
            {
              "id": "f419217f-85ad-44d8-a9f6-6b1026983f52",
              "name": "chunk",
              "value": "={{ JSON.stringify({ text: $json.text || '', ts: $json.now }) }}",
              "type": "string"
            },
            {
              "id": "927c4e67-ba8e-4f75-9031-57e5b84c545d",
              "name": "contact_id",
              "value": "={{ (() => {   const j = $json;   const raw =     j.body?.from ||     j.from ||     j.sender ||     j.data?.key?.remoteJid ||     j.body?.data?.key?.remoteJid ||     '';   const s = String(raw).trim();   if (s.includes('@')) return s;   const digits = s.replace(/\\D/g,'');   return digits ? `${digits}@s.whatsapp.net` : ''; })() }}",
              "type": "string"
            },
            {
              "id": "ca5175a3-27b6-4501-adb9-eebb66234308",
              "name": "aggregated",
              "value": "={{ !!($json.body?.aggregated) }}",
              "type": "boolean"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2060,
        100
      ],
      "id": "130a97f5-c15e-45bd-8c23-ca5d98e1bc4f",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 8285682,
          "mode": "list",
          "cachedResultName": "logs wapp",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=8285682"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "key",
              "lookupValue": "={{\n  (\n    (\n      $json.body?.data?.key?.remoteJid\n      || $json.body?.from\n      || $json.from\n      || $json.body?.sender\n      || $json.data?.key?.remoteJid\n      || $json.remoteJid\n      || $json.contact_id\n      || $json.phone\n      || ''\n    ).toString().split('@')[0].replace(/\\D/g,'')\n  ) + ':' + ($json.body?.stage || $json.stage || 'bmi')\n}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1880,
        260
      ],
      "id": "4a5df8ca-0d5d-4c39-8ded-3a2431a779d8",
      "name": "Google Sheets13",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Источник: пытаемся взять данные из Edit Fields1, иначе из текущего $json\nconst src = ($items(\"Edit Fields1\")[0]?.json) || $json || {};\n\n// Функции-помощники\nconst onlyDigits = v => String(v || '').split('@')[0].replace(/\\D/g, '');\nconst pick = (...xs) => xs.find(v => v !== undefined && v !== null && String(v).trim() !== '');\n\n// Достаём цифры (приоритет: remoteJid контакта, затем sender/from и т.п.)\nlet digits = onlyDigits(\n  pick(\n    src.contact_id,\n    src.phone,\n    src.body?.data?.key?.remoteJid,\n    src.body?.sender,\n    src.body?.from,\n    src.from,\n    src.sender,\n    src.data?.key?.remoteJid,\n    (src.key || '').split(':')[0] // на крайний случай — префикс key до ':'\n  )\n);\n\n// Базовые поля\nconst stage = src.stage || 'bmi';\nconst now   = Number.isFinite(+src.now) ? +src.now : Date.now();\n\n// Ключ: формируем из digits:stage, если digits нет — как минимум :stage\nconst key = digits ? `${digits}:${stage}` : (src.key || `:${stage}`);\n\n// Текст входящего куска (если Edit Fields1 его не дал — тянем из webhook)\nconst text = pick(\n  src.text,\n  src.body?.data?.message?.conversation,\n  src.body?.text,\n  ''\n).toString().trim();\n\n// Имя: учитываем pushName в body.data\nconst name = pick(\n  src.name,\n  src.pushName,\n  src.body?.data?.pushName,\n  src.body?.pushName,\n  ''\n).toString().trim();\n\n// Стартовый буфер\nconst bufferArr = text ? [{ text, ts: now }] : [];\n\nreturn [{\n  json: {\n    key,\n    phone: digits,         // только цифры\n    stage,\n    firstAt: now,\n    lastAt:  now,\n    buffer: JSON.stringify(bufferArr),\n    name,                  // колонка name — опционально, но полезно\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2040,
        600
      ],
      "id": "e1272e2d-3277-42bb-b652-e63435a96fb7",
      "name": "Code2"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 8285682,
          "mode": "list",
          "cachedResultName": "logs wapp",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=8285682"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "key": "={{ $json.key }}",
            "phone": "={{ $json.phone }}",
            "lastAt": "={{ $json.lastAt }}",
            "stage": "={{ $json.stage }}",
            "firstAt": "={{ $json.firstAt }}",
            "buffer": "={{ $json.buffer }}",
            "name": "={{$json.name}}"
          },
          "matchingColumns": [
            "key"
          ],
          "schema": [
            {
              "id": "key",
              "displayName": "key",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "stage",
              "displayName": "stage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "firstAt",
              "displayName": "firstAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "lastAt",
              "displayName": "lastAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "buffer",
              "displayName": "buffer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1880,
        600
      ],
      "id": "88ef4840-c949-4238-bfd5-288571186f88",
      "name": "Google Sheets14",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Источники\nconst src = ($items(\"Edit Fields1\")[0]?.json) || $json || {};\nconst row = $items(\"Google Sheets13\")[0]?.json || {};\n\n// Хелперы\nconst onlyDigits = v => String(v || '').split('@')[0].replace(/\\D/g, '');\nconst pick = (...xs) => xs.find(v => v !== undefined && v !== null && String(v).trim() !== '');\n\n// Время/этап\nconst now   = Number.isFinite(+src.now) ? +src.now : Date.now();\nconst stage = row.stage || src.stage || 'bmi';\n\n// Номер: сперва из строки (надежнее), затем из входа, затем из key\nlet digits = onlyDigits(\n  pick(\n    row.phone,\n    src.contact_id,\n    src.phone,\n    src.body?.data?.key?.remoteJid,\n    src.body?.sender,\n    src.body?.from,\n    src.from,\n    src.sender,\n    src.data?.key?.remoteJid,\n    (row.key || src.key || '').split(':')[0]\n  )\n);\n\n// Ключ оставляем прежний, если есть; иначе собираем из digits:stage\nconst key = row.key || (digits ? `${digits}:${stage}` : (src.key || `:${stage}`));\n\n// Текст куска\nconst text = pick(\n  src.text,\n  src.body?.data?.message?.conversation,\n  src.body?.text,\n  ''\n).toString().trim();\n\n// Текущий буфер из строки\nlet arr = [];\ntry { arr = row.buffer ? JSON.parse(row.buffer) : []; } catch (_) { arr = []; }\n\n// Антидубль по паре (ts, text)\n// Примечание: если опасаешься коллизий по ts, можно добавить хэш текста.\nconst chunk   = { text, ts: now };\nconst exists  = arr.some(x => String(x.ts) === String(chunk.ts) && (x.text || '') === chunk.text);\nconst nextArr = text ? (exists ? arr : [...arr, chunk]) : arr;\n\n// Имя: берём из строки, иначе из webhook (учитываем body.data.pushName)\nconst name = pick(\n  row.name,\n  src.name,\n  src.pushName,\n  src.body?.data?.pushName,\n  src.body?.pushName,\n  ''\n).toString().trim();\n\nreturn [{\n  json: {\n    key,\n    phone: digits,\n    stage,\n    firstAt: row.firstAt || now,\n    lastAt:  now,                        // важно: обновляем на каждый чанк\n    buffer: JSON.stringify(nextArr),\n    name,\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2040,
        440
      ],
      "id": "b626f9c6-fc6b-4f01-a7ba-f02f5c55880c",
      "name": "Code3"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc",
          "mode": "list",
          "cachedResultName": "Диалоги",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 8285682,
          "mode": "list",
          "cachedResultName": "logs wapp",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WOCQBIfJEhzbwSSK1dOF26JMQBO0JAwpuLLVHWnIWUc/edit#gid=8285682"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "key": "={{ $json.key }}",
            "lastAt": "={{ $json.lastAt }}",
            "buffer": "={{$json.buffer}}",
            "name": "={{$json.name}}",
            "firstAt": "={{ $json.firstAt }}"
          },
          "matchingColumns": [
            "key"
          ],
          "schema": [
            {
              "id": "key",
              "displayName": "key",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "stage",
              "displayName": "stage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "firstAt",
              "displayName": "firstAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "lastAt",
              "displayName": "lastAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "buffer",
              "displayName": "buffer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1880,
        440
      ],
      "id": "e36f882c-630b-425a-9dde-bf185a1f011d",
      "name": "Google Sheets15",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y8u36G3ttt4BcDqC",
          "name": "veppers"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fc7f633a-d184-488f-9914-6a58f6a466fc",
              "leftValue": "={{ $json.aggregated }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1880,
        100
      ],
      "id": "ef9f054a-1a4d-402b-888b-81897e604cdb",
      "name": "If (AGGREGATED?)"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fc7f633a-d184-488f-9914-6a58f6a466fc",
              "leftValue": "={{$items('Google Sheets13').filter(i => Object.keys(i.json).length > 0).length}}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2200,
        600
      ],
      "id": "9c6d863b-1a43-4093-85df-1751f84cde9f",
      "name": "If (Row exists?)"
    },
    {
      "parameters": {
        "jsCode": "// безопасный доступ к json любого узла (если не исполнялся — вернёт {})\nconst get = (name) => {\n  try { const a = $items(name); return (Array.isArray(a) && a.length) ? a[0].json : {}; }\n  catch(e){ return {}; }\n};\n\nlet o = {};\ntry { o = JSON.parse($json.message?.content || '{}'); } catch(e) {}\n\nconst hr = get(\"HTTP Request1\");   // вместо $node[\"HTTP Request1\"]\nconst base64   = hr.base64 || hr.result?.base64 || null;\nconst mimetype = hr.mimetype || 'image/jpeg';\nconst fileName = hr.fileName || (mimetype === 'application/pdf' ? 'receipt.pdf' : 'receipt.jpg');\n\nreturn [{\n  // из OpenAI5\n  receipt: o.receipt || 'uncertain',\n  paid: o.paid || 'uncertain',\n  amount: Number.isFinite(o.amount) ? o.amount : null,\n  method: o.method || 'unknown',\n\n  // сервисные поля\n  is_paid: (o.paid === 'yes'),\n  name: $items(\"Webhook\")[0]?.json?.body?.data?.pushName || '',\n  phone: String(($items(\"Webhook\")[0]?.json?.body?.data?.key?.remoteJid\n              || $items(\"Webhook\")[0]?.json?.body?.sender || ''))\n           .split('@')[0].replace(/\\D/g,''),\n  caption_or_text: $items(\"Webhook\")[0]?.json?.body?.data?.message?.imageMessage?.caption\n                || $items(\"Webhook\")[0]?.json?.body?.data?.message?.conversation || '',\n\n  // для отправки файла\n  base64, mimetype, fileName\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        100
      ],
      "id": "a184eb00-1f46-49e0-ab78-1ec7810b1224",
      "name": "Code4"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-09-05T22:24:28.000Z",
  "versionId": "ee89543c-1e53-44bb-8483-0a4ab189f7f5"
}