{
  "active": true,
  "connections": {
    "Set Text": {
      "main": [
        [
          {
            "node": "Set Text (final)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text (final)": {
      "main": [
        [
          {
            "node": "Set SessionKey",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Product_Matrix_EN": {
      "ai_tool": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "offers": {
      "ai_tool": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "added value": {
      "ai_tool": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "БИЗНЕС АССИСТЕНТ1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Alert Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Set Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set SessionKey": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Scheduler Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "IF: Blocked?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets2": {
      "main": [
        [
          {
            "node": "IF: Blocked?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Google Sheets4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets (Reset AutoNotice)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BotDetector": {
      "main": [
        [
          {
            "node": "If_Stop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scheduler Agent": {
      "main": [
        [
          {
            "node": "Set “ScheduleParse”",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Google Sheets3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set “ScheduleParse”": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "BotDetector",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "BotDetector",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Scheduler Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "Scheduler Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets4": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Google Sheets5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory3": {
      "ai_memory": [
        [
          {
            "node": "Alert Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Alert Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Alert Agent": {
      "main": [
        [
          {
            "node": "IF: Has Interest?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF: Has Interest?": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "objections": {
      "ai_tool": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Set Persona Vars": {
      "main": [
        [
          {
            "node": "БИЗНЕС АССИСТЕНТ1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF: Blocked?": {
      "main": [
        [],
        [
          {
            "node": "BotDetector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Stop": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Google Sheets (Block)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets (Reset AutoNotice)": {
      "main": [
        [
          {
            "node": "Set Persona Vars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-24T13:05:50.112Z",
  "id": "DftFmGvDcR0IJr9X",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "INST REP",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ \n  ($json.body.formatted_conversation || '')\n    .split('\\n')\n    .filter(l => /^Prospect:/i.test(l))\n    .pop()\n    ?.replace(/^Prospect:\\s*/i, '') \n    || '' \n}}",
              "type": "string"
            },
            {
              "id": "f8c7aa84-fc8a-49a2-9a41-3a17b6108e74",
              "name": "dialog",
              "value": "={{ $json.body?.formatted_conversation || '' }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "029eb780-17bc-4be8-89a9-e015a084e4ec",
      "name": "Set Text",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1220,
        100
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2b2ff60e-9772-4dc6-8dad-7de37ec83103",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1000,
        100
      ],
      "id": "635429ce-8145-4814-8b83-428eeba9ae37",
      "name": "Set Text (final)"
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/1YweN2Y0M4UgaztMfegRvJtI-Eo2R7TevHoTIE3MAv00/edit?usp=sharing"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        1280,
        320
      ],
      "id": "340b8e0d-ddbf-49fe-9200-433bdfcf22a0",
      "name": "Product_Matrix_EN",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "J3NxwtPAqYUSRz2E",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/15pPUpC9K2QMv-zRE6jk0rZC7Arvk6GFXTxi3ZEGDlu0/edit?usp=sharing"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        1400,
        320
      ],
      "id": "f4e2ed7d-986f-4885-9f4e-cd09ba280dda",
      "name": "offers",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "J3NxwtPAqYUSRz2E",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/1rxnVzqvlXMV5fbHtIusn8PU_p-7pEeMUKhq2KtyFhm0/edit?usp=sharing"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        1520,
        320
      ],
      "id": "0c8bd123-4c98-4885-9cfc-67129c6ae1c2",
      "name": "added value",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "J3NxwtPAqYUSRz2E",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        1760,
        320
      ],
      "id": "b8c7df54-5cef-43eb-86de-c5d3fa3633b9",
      "name": "Calculator1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $node[\"Set Text (final)\"].json.text }}\n",
        "options": {
          "systemMessage": "===PERSONA\nYou are {{ $json.agent_name || 'Alex' }}, {{ $json.agent_role || 'Client Solutions Specialist' }} at {{ $json.brand || '01+1' }}.\nBe human, warm, concise. Mirror the Prospect’s language (reply in Prospect’s language automatically). Never say you’re AI.\n\n=CONTEXT MODE\nYou receive the last 5 minutes of dialog:\nMy msg: …\nProspect: …\nReply ONLY to the latest “Prospect:” line.\nIf the last line is “My msg:”, output exactly: __NO_REPLY__.\n\n==TONE & LENGTH\nDefault: brief. When progressing (warming, discovery, booking), you MAY use up to 2–3 short sentences:\nvalue → ONE discovery question → soft CTA. No walls of text.\n\n==WARM-UP OPENERS (pick 1; personalize with name if visible)\nIf the Prospect shared any business detail:\n  EN: \"Appreciate it! I’m {{agent_name}} at {{brand}}. We keep night/peak leads from leaking AND tighten the overall flow. How are off-hours replies handled now? If helpful, I’ll share a 60-sec peek.\"\nIf neutral short reply (“ok/hi”):\n  EN: \"I’m {{agent_name}} at {{brand}}. Quick idea: lift bookings via speed-to-lead + off-hours, no new hires. Do you lose engaged leads at night/weekends? If yes, I’ll show a 60-sec how others fix it.\"\n\n==NICHE NORMALIZER (non-target verticals)\nIf the Prospect says they’re NOT auto or real-estate:\n  EN: \"Got it, thanks — and sorry for the mismatch. Our systems are cross-vertical. We start with a quick audit to surface high-leverage fixes beyond ‘a sales rep’ (speed-to-lead, routing, SLAs, booking). If useful, here’s the calendar: {{calendar_url}}.\"\n\n==ROLE TARGETING\nIf the responder looks like a gatekeeper (matches {{ $json.gatekeeper_titles }} or signs as assistant/manager):\n  EN: \"Thanks! To save your time: we usually sync with the owner/lead. I can share the calendar link or hand it to WhatsApp to pick a time—what’s easier?\"\nIf the responder is the owner/lead (matches {{ $json.owner_titles }} or bio suggests):\n  → Use BOOKING FLOW.\n\n==AUTO-REPLY HANDLING (ONCE)\nIf the latest line looks like an automated reply:\n  EN: \"Looks like an auto-reply 🙂 I’ll wait for a human and stay around.\"\nSend this only once per thread; ignore further auto-replies.\n\n==WHATSAPP / PHONE HANDOFF\nIf the Prospect asks for WhatsApp/phone or shares a number:\n  EN: \"Got it. Team lead Basil will reach out on WhatsApp: {{ $json.wa_number }}.\"\nNo extra questions in that turn.\n\n==BOOKING FLOW\nWhen interest is confirmed, prefer calendar booking:\n  EN: \"Best next step is a {{ $json.default_call_length_minutes || 30 }}-min call (shorter if needed). Here’s the calendar with open slots: {{ $json.calendar_url }}. If nothing fits, we can pick a custom time via WhatsApp.\"\n\n==SOCIAL PROOF (OPTIONAL, MAX 1 LINE)\nUse only when it supports their last message:\n  EN: \"Responding in 5 vs 30 min → up to 21× higher qualification odds; first-hour contact odds fall >10×. Short client clips available on request.\"\n(Respect ONE-link-per-message; split across turns if needed.)\n\n==OBJECTIONS (DM STAGE)\nIf an objection is detected → fetch the exact micro-reply from the external tool “objections” (English source), then localize to the Prospect’s language; keep 1–2 sentences; optionally 1-line proof; then proceed (asset or booking).\n\n=ASSET POLICY (STRICT)\n• Max ONE link per message; plain https URL (no markdown).\n• Default channel is this IG thread.\n• When the Prospect requests/consents → send exactly ONE best asset with a short lead-in; NO extra asks this turn.\n\n=ASSETS LIBRARY (selectors, ONE link per message; pick the best-fit)\n• VSL short\n• Case PDF — Auto\n• Case PDF — Real-Estate\n• Demo video — Auto\n• Demo video — Real-Estate\n• Offers — A/B with Deferred-90% (internal note)\n• Testimonial — Michael: https://youtube.com/shorts/ZFe9oIwVpH8\n• Testimonial — Dave: https://youtube.com/shorts/2cvN_HwwknY\n\n=ASSET SELECTION RULES (ADD)\n1) If Prospect asks for “reviews/testimonials” → send ONE testimonial link (Michael or Dave), chosen for tone/fit. Do NOT combine with calendar in the same message.\n2) If Prospect asks for “proof/cases” → send ONE case (Auto/RE) or ONE 1-pager; no extra asks this turn.\n3) If Prospect asks “how it works” and wants more detail → send ONE 60-sec VSL or ONE demo; booking CTA comes in the next turn.\n\n=PRIMARY GOALS (ORDER)\n1) Acknowledge succinctly; add one outcome only if helpful.\n2) Progress with at most one needed question.\n3) If they agree to chat, prefer {{ $json.calendar_url }}; offer WhatsApp only if they ask.\n\n=OUTPUT\nOnly the message for the Prospect. Keep to 1–3 short sentences total (per rules).\nWhen sending a link: 1 short lead-in + the URL; no extra asks.\n\n=== FULL DIALOG (last 5 min) ===\n{{ $node[\"Set Text\"].json.dialog || '' }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1320,
        100
      ],
      "id": "b65d85d2-ed21-4e36-82a6-86366432dd70",
      "name": "БИЗНЕС АССИСТЕНТ1",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://the-dms-factory.onrender.com/api/v1/chats/send",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "sender_id",
              "value": "={{ String($node[\"Webhook\"].json.body.business_account_id) }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ String($node[\"Webhook\"].json.body.client_account_id) }}"
            },
            {
              "name": "message",
              "value": "={{ $node[\"БИЗНЕС АССИСТЕНТ1\"].json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2020,
        100
      ],
      "id": "5ad38a63-6250-472f-8e30-b241110a4653",
      "name": "HTTP Request1",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "6baef27b-40e8-4ad9-b22a-10b41a1fff87",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1440,
        100
      ],
      "id": "acbf27d6-b81d-4d0c-bad4-4048f7448b39",
      "name": "Webhook",
      "webhookId": "6baef27b-40e8-4ad9-b22a-10b41a1fff77"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "606bce8e-59ef-4b0a-9318-25a52ad6d3a5",
              "name": "session_key",
              "value": "={{   (     ($json.body?.conversation_key && String($json.body.conversation_key).trim())     || ([$json.body?.client_account_id, $json.body?.business_account_id].filter(Boolean).join('_'))     || String($json.sessionId || Date.now())   ) }}",
              "type": "string"
            },
            {
              "id": "37915bd1-15b4-4018-b924-bfe26df171c3",
              "name": "conversation_key",
              "value": "={{    ($json.body?.conversation_key && String($json.body.conversation_key).trim())   || ([$json.body?.client_account_id, $json.body?.business_account_id].filter(Boolean).join('_')) }}",
              "type": "string"
            },
            {
              "id": "9852bd48-7896-4814-ac93-3021a33316a2",
              "name": "client_id",
              "value": "={{ String($json.body?.client_account_id || '').trim() }}",
              "type": "string"
            },
            {
              "id": "15ead225-3ba5-4099-a4c8-4eb43803b766",
              "name": "business_id",
              "value": "={{ String($json.body?.business_account_id || '').trim() }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -820,
        100
      ],
      "id": "2d1aae86-26ee-4865-8c59-b32c4f42e835",
      "name": "Set SessionKey"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -800,
        720
      ],
      "id": "5bbf8352-8870-487e-9f0d-95f09ad85657",
      "name": "Wait",
      "webhookId": "f7f81aeb-c4f2-444e-9f85-eab540f6cb1b"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ \n  (() => {\n    const b = $json.body || {};\n    const k = (b.conversation_key ?? '').toString().trim();\n    if (k) return k;\n    const client = (b.client_account_id ?? '').toString().trim();\n    const biz    = (b.business_account_id ?? '').toString().trim();\n    if (client && biz) return `${client}_${biz}`;\n    return String($json.session_key || $json.sessionId || Date.now());\n  })()\n}}",
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1160,
        320
      ],
      "id": "361ca65a-264b-4988-8d93-defed637a606",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "chatId": "477076152",
        "text": "в инсте ошибка",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2160,
        100
      ],
      "id": "670e4944-7626-4598-93e5-ea93fca47095",
      "name": "Telegram",
      "webhookId": "a201702f-1066-4361-8cfe-e382df23b5a7",
      "credentials": {
        "telegramApi": {
          "id": "VSaespXbZr5kslxM",
          "name": "msr_jarvis_bot"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini-2025-08-07",
          "mode": "list",
          "cachedResultName": "gpt-5-mini-2025-08-07"
        },
        "options": {
          "temperature": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1040,
        320
      ],
      "id": "cf81b31d-148c-4bcb-a465-c756581e2f40",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ",
          "mode": "list",
          "cachedResultName": "inst Aarav",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "conversation_key",
              "lookupValue": "={{$json.conversation_key}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -620,
        100
      ],
      "id": "d8dce771-c632-4ac6-8d0b-eeaf64e61afa",
      "name": "Google Sheets",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrfB9fg9PEmwDf6p",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34a1ab29-a380-4247-a474-e61491bbcc2d",
              "leftValue": "={{ Number($items(\"Google Sheets\")[0]?.json?.row_number || 0) > 0 }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -460,
        100
      ],
      "id": "6a55db68-5819-4289-9f02-54761dd0d768",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ",
          "mode": "list",
          "cachedResultName": "inst Aarav",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "last_activity_ts": "={{ $node[\"Webhook\"].json.body.timestamp }}",
            "last_msg_preview": "={{ $node[\"Set Text\"].json.dialog }}",
            "conversation_key": "={{ $node[\"Set SessionKey\"].json.conversation_key }}"
          },
          "matchingColumns": [
            "conversation_key"
          ],
          "schema": [
            {
              "id": "conversation_key",
              "displayName": "conversation_key",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_activity_ts",
              "displayName": "last_activity_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "last_msg_preview",
              "displayName": "last_msg_preview",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "blocked",
              "displayName": "blocked",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_followup_at",
              "displayName": "last_followup_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -240,
        0
      ],
      "id": "a14a46dc-57e1-4c53-85fb-dd58d81d0cdf",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrfB9fg9PEmwDf6p",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ",
          "mode": "list",
          "cachedResultName": "inst Aarav",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_key": "={{ $node[\"Set SessionKey\"].json.conversation_key }}",
            "last_activity_ts": "={{ $node[\"Webhook\"].json.body.timestamp }}",
            "last_msg_preview": "={{ $node[\"Set Text\"].json.dialog }}",
            "blocked": "FALSE"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "conversation_key",
              "displayName": "conversation_key",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "last_activity_ts",
              "displayName": "last_activity_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "last_msg_preview",
              "displayName": "last_msg_preview",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "blocked",
              "displayName": "blocked",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "last_followup_at",
              "displayName": "last_followup_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fu_count",
              "displayName": "fu_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "appointment_ts",
              "displayName": "appointment_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "auto_notice_sent",
              "displayName": "auto_notice_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -240,
        160
      ],
      "id": "96439f87-5e23-4afc-8694-a2f88fa05869",
      "name": "Google Sheets2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrfB9fg9PEmwDf6p",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34a1ab29-a380-4247-a474-e61491bbcc2d",
              "leftValue": "={{ $node[\"BotDetector\"].json.output === \"__BOT_SUSPECT__\" }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        820,
        100
      ],
      "id": "9ad33af6-2390-49ff-b9c4-79c35ad7cdbf",
      "name": "If1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $node[\"Set Text (final)\"].json.text || $node[\"Set Text\"].json.text || '' }}\n",
        "options": {
          "systemMessage": "=BOT / STOP DETECTOR\nYou receive the FULL last 5 minutes of dialog:\nMy msg: …\nProspect: …\n\nDecide for the LATEST Prospect line ONLY:\n• If it's an automated reply/template (mass-mail phrasing, repeated templates, “automated message / do not reply”, generic cadence) → output: __BOT_SUSPECT__\n• If it asks to stop/unsubscribe/do not contact (ANY language; examples: stop, unsubscribe, don’t message, do not contact, remove me, opt out, cancel; RU: стоп, не пишите, отписка, не беспокоить, удалите, хватит) → output: __STOP__\n• Otherwise → output: __HUMAN__\n\nOUTPUT: exactly ONE token: __BOT_SUSPECT__ | __STOP__ | __HUMAN__\nNo other text. No JSON.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        140,
        100
      ],
      "id": "9d1571a9-a87e-4266-933e-f4b38020a049",
      "name": "BotDetector",
      "retryOnFail": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text || $json.body?.entry?.[0]?.messaging?.[0]?.message?.text || '' }}\n",
        "options": {
          "systemMessage": "==ROLE\nYou are a scheduler parser. You NEVER write messages to the lead unless timezone is missing.\nYou analyze the latest dialog batch and (1) extract a precise follow-up time if the Prospect asked to be contacted at a specific time, or (2) ask for their timezone in the Prospect’s language if time is specified but timezone is unclear.\n\n=INPUT FORMAT\nYou receive the FULL 5-minute conversation in this format:\nMy msg: …\nProspect: …\nMy msg: …\nProspect: …\n\n=TASK\n1) Look ONLY at the Prospect’s latest intent. If they explicitly ask to be contacted at a specific time/date/day, extract a single concrete ISO-8601 datetime with timezone.\n2) Timezone policy:\n   • If the Prospect mentions a timezone/city/offset (e.g., CET, PST, London, Dubai, UTC−3), use it.\n   • If timezone is missing or ambiguous, DO NOT guess. Set need_timezone=true and compose a short polite question asking for their timezone.\n   • Optional fallback (config): if FALLBACK_TZ is enabled (e.g., \"UTC-3\") and timezone is missing, you MAY use it; otherwise prefer asking.\n3) Language:\n   • Detect the Prospect’s language from the latest message (EN/ES/PT/RU at minimum).\n   • If you need to ask for timezone, write the ask_message in the Prospect’s language. Keep it short and human.\n4) If there is no scheduling intent, return null (no guessing).\n\n=TIME REFERENCE\n• Resolve relative dates (“tomorrow”, “Monday 10:00”) from the current date/time in Europe/Amsterdam unless a specific timezone/city is provided.\n• When a timezone is provided, convert to the correct ISO-8601 with offset.\n\n=OUTPUT (STRICT, one line JSON only)\nReturn exactly one compact JSON object:\n{\"schedule_iso\":\"<ISO8601 with timezone>\",\"need_timezone\":false,\"ask_message\":null,\"language\":\"en\",\"confidence\":<0..1>}\nor\n{\"schedule_iso\":null,\"need_timezone\":true,\"ask_message\":\"<short question in Prospect’s language>\",\"language\":\"ru\",\"confidence\":0.7}\nor\n{\"schedule_iso\":null,\"need_timezone\":false,\"ask_message\":null,\"language\":\"en\",\"confidence\":0}\n\n=EXAMPLES\nProspect: “Text me tomorrow at 15:00 London time” → {\"schedule_iso\":\"2025-09-20T15:00:00+01:00\",\"need_timezone\":false,\"ask_message\":null,\"language\":\"en\",\"confidence\":0.9}\nProspect: “Ping me at 10:00 on Monday” (no timezone) → {\"schedule_iso\":null,\"need_timezone\":true,\"ask_message\":\"What time zone should we use? We’ll reach out exactly at your time.\",\"language\":\"en\",\"confidence\":0.8}\nProspect: “Напишите в 11:00 во вторник” → {\"schedule_iso\":null,\"need_timezone\":true,\"ask_message\":\"Подскажите, пожалуйста, ваш часовой пояс, и мы свяжемся точно в указанное время.\",\"language\":\"ru\",\"confidence\":0.8}\nalways use the current calendar year - 2025\n\nREFERENCE_TIME_ISO = {{ $node[\"Webhook\"].json.body.timestamp }}\nRule: When the user uses relative time (“in 4 days”, “через 4 дня”), compute the absolute date strictly from REFERENCE_TIME_ISO. Do not invent month/day from examples. If the computed date/time in the current year is in the past, roll to the next year."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -440,
        720
      ],
      "id": "efa5f7a9-562e-4fc1-9dd9-c26ef48ca58c",
      "name": "Scheduler Agent",
      "retryOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34a1ab29-a380-4247-a474-e61491bbcc2d",
              "leftValue": "={{ !!$json.schedule_iso }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        60,
        720
      ],
      "id": "168a8e88-0edf-4603-9721-df351754ed2b",
      "name": "If2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f245d39b-9c95-4fcb-8ce7-a43210913be0",
              "name": "schedule_iso",
              "value": "={{ (JSON.parse($node[\"Scheduler Agent\"].json.output || \"{}\").schedule_iso) || null }}",
              "type": "string"
            },
            {
              "id": "7f93e341-b4c4-4cd5-84bc-aed6f37d8f7d",
              "name": "sched_json",
              "value": "={{ JSON.parse($node[\"Scheduler Agent\"].json.output || \"{}\") }}",
              "type": "string"
            },
            {
              "id": "c2b7afbd-4797-42d3-ba00-93c72b2a4927",
              "name": "need_timezone",
              "value": "={{ !!JSON.parse($node[\"Scheduler Agent\"].json.output || \"{}\").need_timezone }}",
              "type": "string"
            },
            {
              "id": "d6179b35-c37e-444d-81ee-e782a24015f4",
              "name": "ask_message",
              "value": "={{ JSON.parse($node[\"Scheduler Agent\"].json.output || \"{}\").ask_message || null }}",
              "type": "string"
            },
            {
              "id": "226cda75-6586-4205-b66e-115b2a6e06fe",
              "name": "lang",
              "value": "={{ JSON.parse($node[\"Scheduler Agent\"].json.output || \"{}\").language || 'en' }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -100,
        720
      ],
      "id": "b79347d6-51b0-4c5c-8484-32b9ec527ef9",
      "name": "Set “ScheduleParse”"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ",
          "mode": "list",
          "cachedResultName": "inst Aarav",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_key": "={{ $node[\"Set SessionKey\"].json.conversation_key }}",
            "appointment_ts": "={{ $node[\"Set “ScheduleParse”\"].json.schedule_iso }}"
          },
          "matchingColumns": [
            "conversation_key"
          ],
          "schema": [
            {
              "id": "conversation_key",
              "displayName": "conversation_key",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_activity_ts",
              "displayName": "last_activity_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_msg_preview",
              "displayName": "last_msg_preview",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "blocked",
              "displayName": "blocked",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_followup_at",
              "displayName": "last_followup_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fu_count",
              "displayName": "fu_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "appointment_ts",
              "displayName": "appointment_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "auto_notice_sent",
              "displayName": "auto_notice_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        400,
        580
      ],
      "id": "4838a04f-496f-493f-a917-f48e8a467195",
      "name": "Google Sheets3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrfB9fg9PEmwDf6p",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34a1ab29-a380-4247-a474-e61491bbcc2d",
              "leftValue": "={{ $('Set “ScheduleParse”').item.json.need_timezone }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        400,
        740
      ],
      "id": "befbf237-78e3-4836-942f-735761d4e03c",
      "name": "If3"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ \n  (() => {\n    const b = $json.body || {};\n    const k = (b.conversation_key ?? '').toString().trim();\n    if (k) return k;\n    const client = (b.client_account_id ?? '').toString().trim();\n    const biz    = (b.business_account_id ?? '').toString().trim();\n    if (client && biz) return `${client}_${biz}`;\n    return String($json.session_key || $json.sessionId || Date.now());\n  })()\n}}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        200,
        300
      ],
      "id": "da56c33b-8a85-4824-ab1d-a3c3d298a839",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini-2025-08-07",
          "mode": "list",
          "cachedResultName": "gpt-5-mini-2025-08-07"
        },
        "options": {
          "temperature": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        80,
        300
      ],
      "id": "5ef6d803-ce5f-42e5-8a38-46b8b4127123",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://the-dms-factory.onrender.com/api/v1/chats/send",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "sender_id",
              "value": "={{ String($node[\"Webhook\"].json.body.business_account_id) }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ String($node[\"Webhook\"].json.body.client_account_id) }}"
            },
            {
              "name": "message",
              "value": "Looks like an auto-reply 🙂 I’ll wait for a human and stay around."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1180,
        -100
      ],
      "id": "10a48114-7f92-4188-9d12-875195c1e82a",
      "name": "HTTP Request2",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://the-dms-factory.onrender.com/api/v1/chats/send",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "sender_id",
              "value": "={{ String($node[\"Webhook\"].json.body.business_account_id) }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ String($node[\"Webhook\"].json.body.client_account_id) }}"
            },
            {
              "name": "message",
              "value": "={{ $json.ask_message }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        580,
        740
      ],
      "id": "55df2866-67a6-43c1-b9e0-83f3a9bcb3f6",
      "name": "HTTP Request",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ \n  (() => {\n    const b = $json.body || {};\n    const k = (b.conversation_key ?? '').toString().trim();\n    if (k) return k;\n    const client = (b.client_account_id ?? '').toString().trim();\n    const biz    = (b.business_account_id ?? '').toString().trim();\n    if (client && biz) return `${client}_${biz}`;\n    return String($json.session_key || $json.sessionId || Date.now());\n  })()\n}}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -320,
        880
      ],
      "id": "3bf003b5-2005-402e-bdaa-e386857e9b82",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini-2025-04-14"
        },
        "options": {
          "temperature": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -440,
        880
      ],
      "id": "70beef25-2a86-4843-8c5c-dd55979d8e62",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ",
          "mode": "list",
          "cachedResultName": "inst Aarav",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "conversation_key",
              "lookupValue": "={{ $node[\"Set SessionKey\"].json.conversation_key }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        820,
        -100
      ],
      "id": "a9681938-a271-4713-9863-11721f9c3b18",
      "name": "Google Sheets4",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrfB9fg9PEmwDf6p",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34a1ab29-a380-4247-a474-e61491bbcc2d",
              "leftValue": "={{ String($items(\"Google Sheets4\")[0]?.json?.auto_notice_sent || '').toLowerCase() !== 'true' }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        980,
        -100
      ],
      "id": "563abed4-f8d2-44ba-8c2c-ed46021cc898",
      "name": "If4"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ",
          "mode": "list",
          "cachedResultName": "inst Aarav",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "last_activity_ts": "={{ $node[\"Webhook\"].json.body.timestamp }}",
            "last_msg_preview": "={{ $node[\"Set Text (final)\"].json.text }}",
            "conversation_key": "={{ $node[\"Set SessionKey\"].json.conversation_key }}",
            "auto_notice_sent": "TRUE"
          },
          "matchingColumns": [
            "conversation_key"
          ],
          "schema": [
            {
              "id": "conversation_key",
              "displayName": "conversation_key",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_activity_ts",
              "displayName": "last_activity_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "last_msg_preview",
              "displayName": "last_msg_preview",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "blocked",
              "displayName": "blocked",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_followup_at",
              "displayName": "last_followup_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fu_count",
              "displayName": "fu_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "appointment_ts",
              "displayName": "appointment_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "auto_notice_sent",
              "displayName": "auto_notice_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1340,
        -100
      ],
      "id": "a4dba16b-f223-4ef8-8239-2668e3a739a4",
      "name": "Google Sheets5",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrfB9fg9PEmwDf6p",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ \n  (() => {\n    const b = $json.body || {};\n    const k = (b.conversation_key ?? '').toString().trim();\n    if (k) return k;\n    const client = (b.client_account_id ?? '').toString().trim();\n    const biz    = (b.business_account_id ?? '').toString().trim();\n    if (client && biz) return `${client}_${biz}`;\n    return String($json.session_key || $json.sessionId || Date.now());\n  })()\n}}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        2020,
        440
      ],
      "id": "11dc5dd1-1975-433d-87b9-b7a20784070d",
      "name": "Simple Memory3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini-2025-04-14"
        },
        "options": {
          "temperature": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1920,
        440
      ],
      "id": "08278cb4-7417-467c-9efe-4df39111c5e0",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "T10Aj8URpRIqIm4V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $node[\"Set Text\"].json.dialog }}",
        "options": {
          "systemMessage": "=ALERT AGENT — CONSERVATIVE, TOKEN OUTPUT\nYou receive the last 3–5 messages. Classify ONLY the LATEST Prospect line.\n\nReturn __INTEREST__ ONLY if ANY of these is true in the latest line:\n1) Explicit intent to call/meet/book/schedule or calendar/availability:\n   (book, schedule, call, demo, meeting, video call, send calendar, invite, slot, \"I’m available\", \"tomorrow 3pm\", \"next week\", \"let’s talk\", \"let’s do it\", picks a time)\n2) WhatsApp is explicitly provided or requested:\n   (mentions “WhatsApp/WA/whatsapp”, WA link, or says “WhatsApp me”)\n3) Neutral info request (no commitment), including:\n   (\"send info\", \"proof\", \"case\", \"testimonial\", \"review\", \"video\", \"price\", \"how much\", \"cost\", \"info\")\n\nOtherwise return __NO_INTEREST__.\n\nHard NO (must be __NO_INTEREST__): stop/unsubscribe/do not contact, explicit declines, out-of-office/auto-replies.\n\nOUTPUT: exactly one token, either __INTEREST__ or __NO_INTEREST__. No other text."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1920,
        300
      ],
      "id": "99d842f4-fe15-48fa-b1aa-318cb2798d9a",
      "name": "Alert Agent",
      "retryOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fc9b44e4-1bf6-46a1-b5fd-63de5745fa87",
              "leftValue": "={{ $node[\"Alert Agent\"].json.output === \"__INTEREST__\" }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2280,
        300
      ],
      "id": "20f9619f-e1ef-4ed3-90b7-e9acff656fa8",
      "name": "IF: Has Interest?"
    },
    {
      "parameters": {
        "chatId": "477076152",
        "text": "={{  (() => {   const key = $node[\"Set SessionKey\"].json.conversation_key || '';   const last = ($node[\"Set Text\"].json.text || '').slice(-280);   return `IG lead alert!\\nThread: ${key}\\nLast: “${last}”`; })() }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2480,
        300
      ],
      "id": "8237016a-f1fe-4b4c-abc3-adc2336d67df",
      "name": "Telegram1",
      "webhookId": "a201702f-1066-4361-8cfe-e382df23b5a7",
      "credentials": {
        "telegramApi": {
          "id": "VSaespXbZr5kslxM",
          "name": "msr_jarvis_bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/1voWtsUKppKm53HTOue604v60aV--CAYHB6F3gbRCf_s/edit?usp=sharing"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        1640,
        320
      ],
      "id": "dde10220-ac17-4feb-acb3-930d9a4c5218",
      "name": "objections",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "J3NxwtPAqYUSRz2E",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f524ef20-0ec4-4c99-988c-6a9fd934424e",
              "name": "agent_name",
              "value": "Alex",
              "type": "string"
            },
            {
              "id": "569e1d19-a49c-4afd-a495-f07d66371752",
              "name": "agent_role",
              "value": "Client Solutions Specialist",
              "type": "string"
            },
            {
              "id": "28b4e89c-8824-475b-8fb3-0e4689884eec",
              "name": "brand",
              "value": "01+1",
              "type": "string"
            },
            {
              "id": "8573b1f7-16d6-4179-ba49-19dff79e74ad",
              "name": "wa_number",
              "value": "+79898517307",
              "type": "string"
            },
            {
              "id": "8907f473-b485-47ae-84be-691c06bcb0f3",
              "name": "calendar_url",
              "value": "https://calendly.com/01p1/30min",
              "type": "string"
            },
            {
              "id": "6db6e29d-b2fd-4e78-9d07-ff5f78714dbe",
              "name": "owner_titles",
              "value": "owner, founder, ceo, managing partner, principal",
              "type": "string"
            },
            {
              "id": "6100a8de-f217-4ae1-a52d-3eed767d03e0",
              "name": "gatekeeper_titles",
              "value": "manager, sales manager, assistant, coordinator",
              "type": "string"
            },
            {
              "id": "5542eaa9-33a1-4b92-9aaa-dead8e5e669c",
              "name": "default_call_length_minutes",
              "value": "30",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1160,
        100
      ],
      "id": "41a875cc-30ce-43ed-a2dd-2514c73382f0",
      "name": "Set Persona Vars"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "654883ba-3f22-4fba-9900-529071a6cdc5",
              "leftValue": "={{ String($items(\"Google Sheets\")[0]?.json?.blocked || '').toLowerCase() === 'true' }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -40,
        100
      ],
      "id": "97ddd502-5f32-4f3e-82d9-349579702f80",
      "name": "IF: Blocked?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7c216d28-9ea5-41a1-9163-dfe8a9271a5e",
              "leftValue": "={{ $node[\"BotDetector\"].json.output === \"__STOP__\" }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        500,
        100
      ],
      "id": "b5c9d116-553e-4f85-a3d2-806d6c1c9eca",
      "name": "If_Stop"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://the-dms-factory.onrender.com/api/v1/chats/send",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "sender_id",
              "value": "={{ String($node[\"Webhook\"].json.body.business_account_id) }}"
            },
            {
              "name": "recipient_id",
              "value": "={{ String($node[\"Webhook\"].json.body.client_account_id) }}"
            },
            {
              "name": "message",
              "value": "Understood — I’ll stop here. If you ever need help, just message anytime."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        500,
        -100
      ],
      "id": "e63e7113-8345-4872-8acd-8e4e4cb1505e",
      "name": "HTTP Request3",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ",
          "mode": "list",
          "cachedResultName": "inst Aarav",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_key": "={{ $node[\"Set SessionKey\"].json.conversation_key }}",
            "blocked": "TRUE"
          },
          "matchingColumns": [
            "conversation_key"
          ],
          "schema": [
            {
              "id": "conversation_key",
              "displayName": "conversation_key",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_activity_ts",
              "displayName": "last_activity_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_msg_preview",
              "displayName": "last_msg_preview",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "blocked",
              "displayName": "blocked",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_followup_at",
              "displayName": "last_followup_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fu_count",
              "displayName": "fu_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "appointment_ts",
              "displayName": "appointment_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "auto_notice_sent",
              "displayName": "auto_notice_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        660,
        -100
      ],
      "id": "d039c083-be76-4d5b-8052-6ada6ae637a5",
      "name": "Google Sheets (Block)",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrfB9fg9PEmwDf6p",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ",
          "mode": "list",
          "cachedResultName": "inst Aarav",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t_P-OJ8s_vnvNYM9dm2q-CDKnHv-coagoc6V7ZnEGAQ/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_key": "={{ $node[\"Set SessionKey\"].json.conversation_key }}",
            "auto_notice_sent": "FALSE"
          },
          "matchingColumns": [
            "conversation_key"
          ],
          "schema": [
            {
              "id": "conversation_key",
              "displayName": "conversation_key",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_activity_ts",
              "displayName": "last_activity_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_msg_preview",
              "displayName": "last_msg_preview",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "blocked",
              "displayName": "blocked",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_followup_at",
              "displayName": "last_followup_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fu_count",
              "displayName": "fu_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "appointment_ts",
              "displayName": "appointment_ts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "auto_notice_sent",
              "displayName": "auto_notice_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        980,
        100
      ],
      "id": "fcd3bc2d-6eeb-4e1a-a290-0564c95875bd",
      "name": "Google Sheets (Reset AutoNotice)",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrfB9fg9PEmwDf6p",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-09-29T14:58:04.000Z",
  "versionId": "6eb93f6c-11e7-4ddc-9bcb-b97f13396f85"
}